STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.Preferences dummyMainMethod_a2dp_Vol_Preferences(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.Preferences dummyMainMethod_a2dp_Vol_Preferences(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.NotificationCatcher dummyMainMethod_a2dp_Vol_NotificationCatcher(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.NotificationCatcher dummyMainMethod_a2dp_Vol_NotificationCatcher(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.PackagesChooser dummyMainMethod_a2dp_Vol_PackagesChooser(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.PackagesChooser dummyMainMethod_a2dp_Vol_PackagesChooser(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.Widget dummyMainMethod_a2dp_Vol_Widget(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.Widget dummyMainMethod_a2dp_Vol_Widget(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.service dummyMainMethod_a2dp_Vol_service(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.service dummyMainMethod_a2dp_Vol_service(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.CustomIntentMaker dummyMainMethod_a2dp_Vol_CustomIntentMaker(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.CustomIntentMaker dummyMainMethod_a2dp_Vol_CustomIntentMaker(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.MyApplication dummyMainMethod_a2dp_Vol_MyApplication(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.MyApplication dummyMainMethod_a2dp_Vol_MyApplication(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.ProviderList dummyMainMethod_a2dp_Vol_ProviderList(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.ProviderList dummyMainMethod_a2dp_Vol_ProviderList(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.ALauncher dummyMainMethod_a2dp_Vol_ALauncher(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.ALauncher dummyMainMethod_a2dp_Vol_ALauncher(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: a2dp.Vol.Starter dummyMainMethod_a2dp_Vol_Starter(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: a2dp.Vol.Starter dummyMainMethod_a2dp_Vol_Starter(android.content.Intent)>
CLINIT edge: $r0 = new a2dp.Vol.main in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: void <clinit>()>
CLINIT edge: $r0 = new a2dp.Vol.service in <dummyMainClass: a2dp.Vol.service dummyMainMethod_a2dp_Vol_service(android.content.Intent)> ==> <a2dp.Vol.service: void <clinit>()>
CLINIT edge: $r0 = new a2dp.Vol.ProviderList in <dummyMainClass: a2dp.Vol.ProviderList dummyMainMethod_a2dp_Vol_ProviderList(android.content.Intent)> ==> <a2dp.Vol.ProviderList: void <clinit>()>
CLINIT edge: $r0 = new a2dp.Vol.EditDevice in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
CLINIT edge: $r7 = newarray (java.lang.String)[1] in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5) in <a2dp.Vol.service: void <clinit>()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <a2dp.Vol.service: void <clinit>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5) in <a2dp.Vol.service: void <clinit>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r0 = newarray (java.lang.String)[5] in <a2dp.Vol.ProviderList: void <clinit>()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r0 = newarray (java.lang.String)[6] in <a2dp.Vol.EditDevice: void <clinit>()> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer valueOf(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Exception: void <init>()> ==> <java.lang.Throwable: void <init>()>
FINALIZE edge: null in <java.lang.Object: void <init>()> ==> <java.lang.Object: void finalize()>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.service$11: void <init>()>() in <a2dp.Vol.service: void <clinit>()> ==> <a2dp.Vol.service$11: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.service$11: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.Starter: void <init>()>() in <dummyMainClass: a2dp.Vol.Starter dummyMainMethod_a2dp_Vol_Starter(android.content.Intent)> ==> <a2dp.Vol.Starter: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.Starter: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: a2dp.Vol.Starter dummyMainMethod_a2dp_Vol_Starter(android.content.Intent)> ==> <a2dp.Vol.Starter: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke r0.<a2dp.Vol.Starter: android.content.Intent getIntent()>() in <a2dp.Vol.Starter: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.Starter: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.ALauncher: void <init>()>() in <dummyMainClass: a2dp.Vol.ALauncher dummyMainMethod_a2dp_Vol_ALauncher(android.content.Intent)> ==> <a2dp.Vol.ALauncher: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.ALauncher: void onCreate()>() in <dummyMainClass: a2dp.Vol.ALauncher dummyMainMethod_a2dp_Vol_ALauncher(android.content.Intent)> ==> <a2dp.Vol.ALauncher: void onCreate()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<a2dp.Vol.ALauncher: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: a2dp.Vol.ALauncher dummyMainMethod_a2dp_Vol_ALauncher(android.content.Intent)> ==> <a2dp.Vol.ALauncher: android.os.IBinder onBind(android.content.Intent)>
CLINIT edge: $r9 = new java.lang.String in <a2dp.Vol.ALauncher: void onCreate()> ==> <java.lang.String: void <clinit>()>
VIRTUAL edge: parameter0 = virtualinvoke this.<a2dp.Vol.ALauncher: android.content.Intent getIntent()>() in <a2dp.Vol.ALauncher: android.os.IBinder onBind(android.content.Intent)> ==> <a2dp.Vol.ALauncher: android.content.Intent getIntent()>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>() in <a2dp.Vol.ALauncher: void onCreate()> ==> <java.lang.String: java.lang.String trim()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String trim()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r9.<java.lang.String: void <init>(byte[])>(r1) in <a2dp.Vol.ALauncher: void onCreate()> ==> <java.lang.String: void <init>(byte[])>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[])> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r19.<a2dp.Vol.EditDevice$12: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$12: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r19.<a2dp.Vol.EditDevice$12: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$12: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$12: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r18.<a2dp.Vol.EditDevice$1: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$1: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r18.<a2dp.Vol.EditDevice$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>(null, 0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>
CLINIT edge: staticinvoke <a2dp.Vol.EditDevice: void access$000(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$1: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: void access$000(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$1: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <a2dp.Vol.EditDevice: void access$000(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$1: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r17.<a2dp.Vol.EditDevice$2: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$2: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r17.<a2dp.Vol.EditDevice$2: void onCheckedChanged(android.widget.CompoundButton,boolean)>(null, 0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$2: void onCheckedChanged(android.widget.CompoundButton,boolean)>
CLINIT edge: staticinvoke <a2dp.Vol.EditDevice: void access$100(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$2: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: void access$100(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$2: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <a2dp.Vol.EditDevice: void access$100(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$2: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r16.<a2dp.Vol.EditDevice$6: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$6: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: $z0 = virtualinvoke $r16.<a2dp.Vol.EditDevice$6: boolean onLongClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$6: boolean onLongClick(android.view.View)>
CLINIT edge: r4 = newarray (java.lang.String)[$i0] in <a2dp.Vol.EditDevice$6: boolean onLongClick(android.view.View)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r12.<a2dp.Vol.EditDevice$6$1: void <init>(a2dp.Vol.EditDevice$6,java.lang.String[])>(r0, r3) in <a2dp.Vol.EditDevice$6: boolean onLongClick(android.view.View)> ==> <a2dp.Vol.EditDevice$6$1: void <init>(a2dp.Vol.EditDevice$6,java.lang.String[])>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$6$1: void <init>(a2dp.Vol.EditDevice$6,java.lang.String[])> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$6: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r15.<a2dp.Vol.EditDevice$5: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$5: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r15.<a2dp.Vol.EditDevice$5: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$5: void onClick(android.view.View)>
CLINIT edge: staticinvoke <a2dp.Vol.EditDevice: void access$400(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$5: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: void access$400(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$5: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: void access$400(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$5: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r14.<a2dp.Vol.EditDevice$8$1: void <init>(a2dp.Vol.EditDevice$8,java.util.Vector)>($r13, null) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$8$1: void <init>(a2dp.Vol.EditDevice$8,java.util.Vector)>
VIRTUAL edge: virtualinvoke $r14.<a2dp.Vol.EditDevice$8$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$8$1: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r5 = staticinvoke <a2dp.Vol.EditDevice: android.widget.EditText access$1000(a2dp.Vol.EditDevice)>($r4) in <a2dp.Vol.EditDevice$8$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.EditDevice: android.widget.EditText access$1000(a2dp.Vol.EditDevice)>($r4) in <a2dp.Vol.EditDevice$8$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: android.widget.EditText access$1000(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$8$1: void <init>(a2dp.Vol.EditDevice$8,java.util.Vector)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r13.<a2dp.Vol.EditDevice$8: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$8: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$8: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r12.<a2dp.Vol.EditDevice$8: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$8: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r12.<a2dp.Vol.EditDevice$8: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$8: void onClick(android.view.View)>
CLINIT edge: $r5 = staticinvoke <a2dp.Vol.EditDevice: a2dp.Vol.DeviceDB access$800(a2dp.Vol.EditDevice)>($r4) in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.EditDevice: a2dp.Vol.DeviceDB access$800(a2dp.Vol.EditDevice)>($r4) in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: a2dp.Vol.DeviceDB access$800(a2dp.Vol.EditDevice)>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: a2dp.Vol.DeviceDB access$802(a2dp.Vol.EditDevice,a2dp.Vol.DeviceDB)>($r4, $r14) in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: a2dp.Vol.DeviceDB access$802(a2dp.Vol.EditDevice,a2dp.Vol.DeviceDB)>
STATIC edge: $r8 = staticinvoke <a2dp.Vol.EditDevice: a2dp.Vol.MyApplication access$900(a2dp.Vol.EditDevice)>($r7) in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: a2dp.Vol.MyApplication access$900(a2dp.Vol.EditDevice)>
CLINIT edge: r3 = newarray (java.lang.String)[$i0] in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r16.<a2dp.Vol.EditDevice$8$1: void <init>(a2dp.Vol.EditDevice$8,java.util.Vector)>(r0, $r9) in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice$8$1: void <init>(a2dp.Vol.EditDevice$8,java.util.Vector)>
SPECIAL edge: specialinvoke $r14.<a2dp.Vol.DeviceDB: void <init>(android.content.Context)>($r8) in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <a2dp.Vol.DeviceDB: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r2.<a2dp.Vol.DeviceDB$OpenHelper: void <init>(android.content.Context)>($r1) in <a2dp.Vol.DeviceDB: void <init>(android.content.Context)> ==> <a2dp.Vol.DeviceDB$OpenHelper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.DeviceDB: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r11.<a2dp.Vol.EditDevice$9: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$9: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r11.<a2dp.Vol.EditDevice$9: void onProgressChanged(android.widget.SeekBar,int,boolean)>(null, 0, 0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$9: void onProgressChanged(android.widget.SeekBar,int,boolean)>
CLINIT edge: $r3 = staticinvoke <a2dp.Vol.EditDevice: android.widget.TextView access$1100(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$9: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: $r3 = staticinvoke <a2dp.Vol.EditDevice: android.widget.TextView access$1100(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$9: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <a2dp.Vol.EditDevice: android.widget.TextView access$1100(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$9: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r10.<a2dp.Vol.EditDevice$10: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$10: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r10.<a2dp.Vol.EditDevice$10: void onProgressChanged(android.widget.SeekBar,int,boolean)>(null, 0, 0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$10: void onProgressChanged(android.widget.SeekBar,int,boolean)>
CLINIT edge: $r3 = staticinvoke <a2dp.Vol.EditDevice: android.widget.TextView access$1200(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$10: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: $r3 = staticinvoke <a2dp.Vol.EditDevice: android.widget.TextView access$1200(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$10: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <a2dp.Vol.EditDevice: android.widget.TextView access$1200(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$10: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r8.<a2dp.Vol.EditDevice$6$1: void <init>(a2dp.Vol.EditDevice$6,java.lang.String[])>($r6, $r7) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$6$1: void <init>(a2dp.Vol.EditDevice$6,java.lang.String[])>
VIRTUAL edge: virtualinvoke $r8.<a2dp.Vol.EditDevice$6$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$6$1: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r2 = staticinvoke <a2dp.Vol.EditDevice: android.widget.EditText access$500(a2dp.Vol.EditDevice)>($r4) in <a2dp.Vol.EditDevice$6$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: $r2 = staticinvoke <a2dp.Vol.EditDevice: android.widget.EditText access$500(a2dp.Vol.EditDevice)>($r4) in <a2dp.Vol.EditDevice$6$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: android.widget.EditText access$500(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r6.<a2dp.Vol.EditDevice$6: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$6: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r5.<a2dp.Vol.EditDevice$3: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$3: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r5.<a2dp.Vol.EditDevice$3: void onCheckedChanged(android.widget.CompoundButton,boolean)>(null, 0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$3: void onCheckedChanged(android.widget.CompoundButton,boolean)>
CLINIT edge: staticinvoke <a2dp.Vol.EditDevice: void access$200(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$3: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: void access$200(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$3: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <a2dp.Vol.EditDevice: void access$200(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$3: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<a2dp.Vol.EditDevice$11: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$11: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: void access$1700(a2dp.Vol.EditDevice)>($r3) in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: void access$1700(a2dp.Vol.EditDevice)>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: java.lang.String access$1502(a2dp.Vol.EditDevice,java.lang.String)>($r3, "") in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: java.lang.String access$1502(a2dp.Vol.EditDevice,java.lang.String)>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: java.lang.String access$1402(a2dp.Vol.EditDevice,java.lang.String)>($r3, "") in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: java.lang.String access$1402(a2dp.Vol.EditDevice,java.lang.String)>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: java.lang.String access$1302(a2dp.Vol.EditDevice,java.lang.String)>($r3, "") in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: java.lang.String access$1302(a2dp.Vol.EditDevice,java.lang.String)>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: java.lang.String access$1602(a2dp.Vol.EditDevice,java.lang.String)>($r3, "") in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: java.lang.String access$1602(a2dp.Vol.EditDevice,java.lang.String)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.EditDevice: java.lang.String access$1600(a2dp.Vol.EditDevice)>($r3) in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: java.lang.String access$1600(a2dp.Vol.EditDevice)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.EditDevice: java.lang.String access$1500(a2dp.Vol.EditDevice)>($r3) in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: java.lang.String access$1500(a2dp.Vol.EditDevice)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.EditDevice: java.lang.String access$1400(a2dp.Vol.EditDevice)>($r3) in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: java.lang.String access$1400(a2dp.Vol.EditDevice)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.EditDevice: java.lang.String access$1300(a2dp.Vol.EditDevice)>($r3) in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: java.lang.String access$1300(a2dp.Vol.EditDevice)>
CLINIT edge: staticinvoke <a2dp.Vol.EditDevice: java.lang.String access$1602(a2dp.Vol.EditDevice,java.lang.String)>($r3, "") in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
CLINIT edge: $r6 = staticinvoke <a2dp.Vol.EditDevice: java.lang.String access$1300(a2dp.Vol.EditDevice)>($r3) in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
CLINIT edge: $r6 = <a2dp.Vol.ProviderList: java.lang.String EXTRA_PROVIDER> in <a2dp.Vol.EditDevice$11: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.ProviderList: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$11: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.EditDevice$4: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$4: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.EditDevice$4: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$4: void onClick(android.view.View)>
CLINIT edge: staticinvoke <a2dp.Vol.EditDevice: void access$300(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$4: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: void access$400(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$4: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: void access$400(a2dp.Vol.EditDevice)>
STATIC edge: staticinvoke <a2dp.Vol.EditDevice: void access$300(a2dp.Vol.EditDevice)>($r2) in <a2dp.Vol.EditDevice$4: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: void access$300(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$4: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.EditDevice$7: void <init>(a2dp.Vol.EditDevice)>($r0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$7: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.EditDevice$7: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice$7: void onClick(android.view.View)>
CLINIT edge: $r4 = staticinvoke <a2dp.Vol.EditDevice: java.lang.String[] access$600()>() in <a2dp.Vol.EditDevice$7: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.EditDevice: android.content.DialogInterface$OnClickListener access$700(a2dp.Vol.EditDevice)>($r3) in <a2dp.Vol.EditDevice$7: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: android.content.DialogInterface$OnClickListener access$700(a2dp.Vol.EditDevice)>
STATIC edge: $r4 = staticinvoke <a2dp.Vol.EditDevice: java.lang.String[] access$600()>() in <a2dp.Vol.EditDevice$7: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice: java.lang.String[] access$600()>
CLINIT edge: r0 = <a2dp.Vol.EditDevice: java.lang.String[] APP_TYPE_OPTIONS> in <a2dp.Vol.EditDevice: java.lang.String[] access$600()> ==> <a2dp.Vol.EditDevice: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$7: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.EditDevice: void <init>()>() in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.EditDevice: void onBackPressed()>() in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice: void onBackPressed()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.EditDevice: void onActivityResult(int,int,android.content.Intent)>(0, 0, null) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice: void onActivityResult(int,int,android.content.Intent)>
VIRTUAL edge: $r9 = virtualinvoke $r0.<a2dp.Vol.EditDevice: android.app.Dialog onCreateDialog(int)>(0) in <dummyMainClass: a2dp.Vol.EditDevice dummyMainMethod_a2dp_Vol_EditDevice(android.content.Intent)> ==> <a2dp.Vol.EditDevice: android.app.Dialog onCreateDialog(int)>
CLINIT edge: $r3 = <a2dp.Vol.EditDevice: java.lang.String[] APP_TYPE_OPTIONS> in <a2dp.Vol.EditDevice: android.app.Dialog onCreateDialog(int)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
SPECIAL edge: specialinvoke $r8.<a2dp.Vol.EditDevice$13: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: android.app.Dialog onCreateDialog(int)> ==> <a2dp.Vol.EditDevice$13: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.EditDevice$13: void <init>(a2dp.Vol.EditDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r7.<a2dp.Vol.EditDevice$12: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: android.app.Dialog onCreateDialog(int)> ==> <a2dp.Vol.EditDevice$12: void <init>(a2dp.Vol.EditDevice)>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.EditDevice: android.content.Intent getIntent()>() in <a2dp.Vol.EditDevice: void onActivityResult(int,int,android.content.Intent)> ==> <a2dp.Vol.EditDevice: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void vUpdateApp()>() in <a2dp.Vol.EditDevice: void onActivityResult(int,int,android.content.Intent)> ==> <a2dp.Vol.EditDevice: void vUpdateApp()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void processShortcut(android.content.Intent)>($r1) in <a2dp.Vol.EditDevice: void onActivityResult(int,int,android.content.Intent)> ==> <a2dp.Vol.EditDevice: void processShortcut(android.content.Intent)>
CLINIT edge: $r5 = staticinvoke <a2dp.Vol.EditDevice: java.lang.String getIntentUri(android.content.Intent)>(r4) in <a2dp.Vol.EditDevice: void processShortcut(android.content.Intent)> ==> <a2dp.Vol.EditDevice: void <clinit>()>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.EditDevice: java.lang.String getIntentUri(android.content.Intent)>(r4) in <a2dp.Vol.EditDevice: void processShortcut(android.content.Intent)> ==> <a2dp.Vol.EditDevice: java.lang.String getIntentUri(android.content.Intent)>
CLINIT edge: $r5 = <a2dp.Vol.ProviderList: java.lang.String EXTRA_PACKAGE_NAME> in <a2dp.Vol.EditDevice: void processShortcut(android.content.Intent)> ==> <a2dp.Vol.ProviderList: void <clinit>()>
CLINIT edge: $r2 = <java.lang.Integer: java.lang.Class TYPE> in <a2dp.Vol.EditDevice: java.lang.String getIntentUri(android.content.Intent)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <a2dp.Vol.EditDevice: java.lang.String getIntentUri(android.content.Intent)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r7 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("URI_INTENT_SCHEME") in <a2dp.Vol.EditDevice: java.lang.String getIntentUri(android.content.Intent)> ==> <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("toUri", $r4) in <a2dp.Vol.EditDevice: java.lang.String getIntentUri(android.content.Intent)> ==> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.EditDevice: void processShortcut(android.content.Intent)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void printStackTrace()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r5.<java.lang.String: int length()>() in <a2dp.Vol.EditDevice: void processShortcut(android.content.Intent)> ==> <java.lang.String: int length()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int length()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void vUpdateApp()>() in <a2dp.Vol.EditDevice: void processShortcut(android.content.Intent)> ==> <a2dp.Vol.EditDevice: void vUpdateApp()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void setAppVisibility()>() in <a2dp.Vol.EditDevice: void vUpdateApp()> ==> <a2dp.Vol.EditDevice: void setAppVisibility()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<java.lang.String: int length()>() in <a2dp.Vol.EditDevice: void vUpdateApp()> ==> <java.lang.String: int length()>
VIRTUAL edge: $i2 = virtualinvoke $r3.<java.lang.String: int length()>() in <a2dp.Vol.EditDevice: void onActivityResult(int,int,android.content.Intent)> ==> <java.lang.String: int length()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("") in <a2dp.Vol.EditDevice: void onActivityResult(int,int,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Custom") in <a2dp.Vol.EditDevice: void onActivityResult(int,int,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void Save()>() in <a2dp.Vol.EditDevice: void onBackPressed()> ==> <a2dp.Vol.EditDevice: void Save()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void closedb()>() in <a2dp.Vol.EditDevice: void onBackPressed()> ==> <a2dp.Vol.EditDevice: void closedb()>
VIRTUAL edge: virtualinvoke r1.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.EditDevice: void Save()> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r29.<a2dp.Vol.EditDevice$8: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice$8: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r28.<a2dp.Vol.EditDevice$7: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice$7: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r27.<a2dp.Vol.EditDevice$6: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice$6: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r26.<a2dp.Vol.EditDevice$5: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice$5: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r25.<a2dp.Vol.EditDevice$4: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice$4: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r24.<a2dp.Vol.EditDevice$3: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice$3: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r23.<a2dp.Vol.EditDevice$2: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice$2: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r22.<a2dp.Vol.EditDevice$1: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice$1: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r4.<a2dp.Vol.DeviceDB: void <init>(android.content.Context)>($r3) in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.DeviceDB: void <init>(android.content.Context)>
VIRTUAL edge: $r19 = virtualinvoke $r4.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>($r18) in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
CLINIT edge: $r5 = newarray (java.lang.String)[1] in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke r2.<a2dp.Vol.btDevice: void <init>()>() in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void <init>()>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setDesc1(java.lang.String)>($r1) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setDesc1(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setDesc2(java.lang.String)>($r1) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setDesc2(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setMac(java.lang.String)>($r1) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setMac(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setDefVol(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setDefVol(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setSetV(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setSetV(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setGetLoc(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setGetLoc(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setPname(java.lang.String)>($r1) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setPname(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setBdevice(java.lang.String)>($r1) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setBdevice(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setWifi(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setWifi(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setAppaction(java.lang.String)>($r1) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setAppaction(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setAppdata(java.lang.String)>($r1) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setAppdata(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setApptype(java.lang.String)>($r1) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setApptype(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setApprestart(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setApprestart(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setEnableTTS(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setEnableTTS(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setSetpv(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setSetpv(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setPhonev(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setPhonev(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setAppkill(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setAppkill(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setEnablegps(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setEnablegps(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setIcon(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setSmsdelay(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setSmsdelay(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setSmsstream(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setSmsstream(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setVoldelay(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setVoldelay(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setVolramp(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setVolramp(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setAutovol(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setAutovol(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setSilent(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setSilent(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setSleep(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setSleep(int)>
VIRTUAL edge: virtualinvoke r2.<a2dp.Vol.btDevice: void setCarmode(int)>($i0) in <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)> ==> <a2dp.Vol.btDevice: void setCarmode(int)>
CLINIT edge: $r1 = staticinvoke <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)>($r1) in <a2dp.Vol.btDevice: void setDesc2(java.lang.String)> ==> <a2dp.Vol.FileNameCleaner: void <clinit>()>
STATIC edge: $r1 = staticinvoke <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)>($r1) in <a2dp.Vol.btDevice: void setDesc2(java.lang.String)> ==> <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)>
CLINIT edge: $r2 = <a2dp.Vol.FileNameCleaner: int[] illegalChars> in <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)> ==> <a2dp.Vol.FileNameCleaner: void <clinit>()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<java.lang.String: int length()>() in <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)> ==> <java.lang.String: int length()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.btDevice: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isGetLoc()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isGetLoc()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isSetV()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isSetV()>
VIRTUAL edge: $r18 = virtualinvoke $r19.<a2dp.Vol.btDevice: java.lang.String getPname()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: java.lang.String getPname()>
VIRTUAL edge: $r18 = virtualinvoke $r19.<a2dp.Vol.btDevice: java.lang.String getBdevice()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: java.lang.String getBdevice()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isWifi()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isWifi()>
VIRTUAL edge: $r18 = virtualinvoke $r19.<a2dp.Vol.btDevice: java.lang.String getAppaction()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: java.lang.String getAppaction()>
VIRTUAL edge: $r18 = virtualinvoke $r19.<a2dp.Vol.btDevice: java.lang.String getAppdata()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: java.lang.String getAppdata()>
VIRTUAL edge: $r18 = virtualinvoke $r19.<a2dp.Vol.btDevice: java.lang.String getApptype()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: java.lang.String getApptype()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isApprestart()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isApprestart()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isAppkill()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isAppkill()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isEnableTTS()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isEnableTTS()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isSetpv()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isSetpv()>
VIRTUAL edge: $i0 = virtualinvoke $r19.<a2dp.Vol.btDevice: int getPhonev()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: int getPhonev()>
VIRTUAL edge: $i0 = virtualinvoke $r19.<a2dp.Vol.btDevice: int getSmsdelay()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: int getSmsdelay()>
VIRTUAL edge: $i0 = virtualinvoke $r19.<a2dp.Vol.btDevice: int getVoldelay()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: int getVoldelay()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isVolramp()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isVolramp()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isAutovol()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isAutovol()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isSilent()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isSilent()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isSleep()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isSleep()>
VIRTUAL edge: $z0 = virtualinvoke $r19.<a2dp.Vol.btDevice: boolean isCarmode()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: boolean isCarmode()>
VIRTUAL edge: $i0 = virtualinvoke $r19.<a2dp.Vol.btDevice: int getIcon()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: int getIcon()>
VIRTUAL edge: $i0 = virtualinvoke $r19.<a2dp.Vol.btDevice: int getSmsstream()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.btDevice: int getSmsstream()>
VIRTUAL edge: $r2 = virtualinvoke r0.<a2dp.Vol.EditDevice: android.app.Application getApplication()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.app.Application getApplication()>
VIRTUAL edge: $r17 = virtualinvoke r0.<a2dp.Vol.EditDevice: android.content.Intent getIntent()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void setTTSVisibility()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice: void setTTSVisibility()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void setMediaVisibility()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice: void setMediaVisibility()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void setInCallVisibility()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice: void setInCallVisibility()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void setAppVisibility()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice: void setAppVisibility()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.EditDevice: void vUpdateApp()>() in <a2dp.Vol.EditDevice: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.EditDevice: void vUpdateApp()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.EditDevice$11: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void <init>()> ==> <a2dp.Vol.EditDevice$11: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.EditDevice$10: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void <init>()> ==> <a2dp.Vol.EditDevice$10: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r1.<a2dp.Vol.EditDevice$9: void <init>(a2dp.Vol.EditDevice)>(r0) in <a2dp.Vol.EditDevice: void <init>()> ==> <a2dp.Vol.EditDevice$9: void <init>(a2dp.Vol.EditDevice)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.ProviderList: void <init>()>() in <dummyMainClass: a2dp.Vol.ProviderList dummyMainMethod_a2dp_Vol_ProviderList(android.content.Intent)> ==> <a2dp.Vol.ProviderList: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.ProviderList: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: a2dp.Vol.ProviderList dummyMainMethod_a2dp_Vol_ProviderList(android.content.Intent)> ==> <a2dp.Vol.ProviderList: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.ProviderList: void onConfigurationChanged(android.content.res.Configuration)>(null) in <dummyMainClass: a2dp.Vol.ProviderList dummyMainMethod_a2dp_Vol_ProviderList(android.content.Intent)> ==> <a2dp.Vol.ProviderList: void onConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.ProviderList: void onListItemClick(android.widget.ListView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: a2dp.Vol.ProviderList dummyMainMethod_a2dp_Vol_ProviderList(android.content.Intent)> ==> <a2dp.Vol.ProviderList: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
CLINIT edge: $r3 = <a2dp.Vol.ProviderList: java.lang.String EXTRA_PROVIDER> in <a2dp.Vol.ProviderList: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ProviderList: void <clinit>()>
CLINIT edge: $r5 = <a2dp.Vol.ProviderList: java.lang.String[] P_URI_STRINGS> in <a2dp.Vol.ProviderList: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <a2dp.Vol.ProviderList: void <clinit>()>
CLINIT edge: $r5 = newarray (java.lang.String)[2] in <a2dp.Vol.ProviderList: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: $r13 = specialinvoke r0.<a2dp.Vol.ProviderList: android.content.Intent getSelectedIntent(java.lang.String)>($r6) in <a2dp.Vol.ProviderList: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <a2dp.Vol.ProviderList: android.content.Intent getSelectedIntent(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ProviderList: void setResult(int,android.content.Intent)>($i0, r3) in <a2dp.Vol.ProviderList: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <a2dp.Vol.ProviderList: void setResult(int,android.content.Intent)>
CLINIT edge: $r2 = <a2dp.Vol.ProviderList: int[] P_MI_TYPES> in <a2dp.Vol.ProviderList: android.content.Intent getSelectedIntent(java.lang.String)> ==> <a2dp.Vol.ProviderList: void <clinit>()>
VIRTUAL edge: $r1 = virtualinvoke $r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("@@", $r1) in <a2dp.Vol.ProviderList: android.content.Intent getSelectedIntent(java.lang.String)> ==> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<a2dp.Vol.ProviderList: android.content.Intent getIntent()>() in <a2dp.Vol.ProviderList: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ProviderList: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.ProviderList: void loadList()>() in <a2dp.Vol.ProviderList: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ProviderList: void loadList()>
CLINIT edge: $r1 = <a2dp.Vol.ProviderList: java.lang.String[] P_URI_STRINGS> in <a2dp.Vol.ProviderList: void loadList()> ==> <a2dp.Vol.ProviderList: void <clinit>()>
CLINIT edge: $r1 = newarray (java.lang.String)[2] in <a2dp.Vol.ProviderList: void loadList()> ==> <java.lang.String: void <clinit>()>
VIRTUAL edge: virtualinvoke r7.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.ProviderList: void loadList()> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.MyApplication: void <init>()>() in <dummyMainClass: a2dp.Vol.MyApplication dummyMainMethod_a2dp_Vol_MyApplication(android.content.Intent)> ==> <a2dp.Vol.MyApplication: void <init>()>
SPECIAL edge: specialinvoke $r4.<a2dp.Vol.CustomIntentMaker$3: void <init>(a2dp.Vol.CustomIntentMaker)>($r0) in <dummyMainClass: a2dp.Vol.CustomIntentMaker dummyMainMethod_a2dp_Vol_CustomIntentMaker(android.content.Intent)> ==> <a2dp.Vol.CustomIntentMaker$3: void <init>(a2dp.Vol.CustomIntentMaker)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.CustomIntentMaker dummyMainMethod_a2dp_Vol_CustomIntentMaker(android.content.Intent)> ==> <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)>
STATIC edge: $r12 = staticinvoke <a2dp.Vol.CustomIntentMaker: android.widget.Button access$300(a2dp.Vol.CustomIntentMaker)>($r2) in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <a2dp.Vol.CustomIntentMaker: android.widget.Button access$300(a2dp.Vol.CustomIntentMaker)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.CustomIntentMaker: boolean isShortcutIntent(java.lang.String)>($r6) in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <a2dp.Vol.CustomIntentMaker: boolean isShortcutIntent(java.lang.String)>
STATIC edge: $r3 = staticinvoke <a2dp.Vol.CustomIntentMaker: android.widget.EditText access$200(a2dp.Vol.CustomIntentMaker)>($r2) in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <a2dp.Vol.CustomIntentMaker: android.widget.EditText access$200(a2dp.Vol.CustomIntentMaker)>
STATIC edge: $r3 = staticinvoke <a2dp.Vol.CustomIntentMaker: android.widget.EditText access$100(a2dp.Vol.CustomIntentMaker)>($r2) in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <a2dp.Vol.CustomIntentMaker: android.widget.EditText access$100(a2dp.Vol.CustomIntentMaker)>
STATIC edge: $r3 = staticinvoke <a2dp.Vol.CustomIntentMaker: android.widget.EditText access$000(a2dp.Vol.CustomIntentMaker)>($r2) in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <a2dp.Vol.CustomIntentMaker: android.widget.EditText access$000(a2dp.Vol.CustomIntentMaker)>
VIRTUAL edge: virtualinvoke r16.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r15.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $i0 = virtualinvoke $r5.<java.lang.String: int length()>() in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <java.lang.String: int length()>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6) in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("") in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.CustomIntentMaker$3: void <init>(a2dp.Vol.CustomIntentMaker)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.CustomIntentMaker$1: void <init>(a2dp.Vol.CustomIntentMaker)>($r0) in <dummyMainClass: a2dp.Vol.CustomIntentMaker dummyMainMethod_a2dp_Vol_CustomIntentMaker(android.content.Intent)> ==> <a2dp.Vol.CustomIntentMaker$1: void <init>(a2dp.Vol.CustomIntentMaker)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.CustomIntentMaker$1: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.CustomIntentMaker dummyMainMethod_a2dp_Vol_CustomIntentMaker(android.content.Intent)> ==> <a2dp.Vol.CustomIntentMaker$1: void onClick(android.view.View)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.CustomIntentMaker$1: void <init>(a2dp.Vol.CustomIntentMaker)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.CustomIntentMaker$2: void <init>(a2dp.Vol.CustomIntentMaker)>($r0) in <dummyMainClass: a2dp.Vol.CustomIntentMaker dummyMainMethod_a2dp_Vol_CustomIntentMaker(android.content.Intent)> ==> <a2dp.Vol.CustomIntentMaker$2: void <init>(a2dp.Vol.CustomIntentMaker)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.CustomIntentMaker$2: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.CustomIntentMaker dummyMainMethod_a2dp_Vol_CustomIntentMaker(android.content.Intent)> ==> <a2dp.Vol.CustomIntentMaker$2: void onClick(android.view.View)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.CustomIntentMaker$2: void <init>(a2dp.Vol.CustomIntentMaker)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.CustomIntentMaker: void <init>()>() in <dummyMainClass: a2dp.Vol.CustomIntentMaker dummyMainMethod_a2dp_Vol_CustomIntentMaker(android.content.Intent)> ==> <a2dp.Vol.CustomIntentMaker: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.CustomIntentMaker: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: a2dp.Vol.CustomIntentMaker dummyMainMethod_a2dp_Vol_CustomIntentMaker(android.content.Intent)> ==> <a2dp.Vol.CustomIntentMaker: void onCreate(android.os.Bundle)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.CustomIntentMaker: void initViews()>() in <a2dp.Vol.CustomIntentMaker: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.CustomIntentMaker: void initViews()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.CustomIntentMaker: void assignListeners()>() in <a2dp.Vol.CustomIntentMaker: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.CustomIntentMaker: void assignListeners()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.CustomIntentMaker$3: void <init>(a2dp.Vol.CustomIntentMaker)>(r0) in <a2dp.Vol.CustomIntentMaker: void <init>()> ==> <a2dp.Vol.CustomIntentMaker$3: void <init>(a2dp.Vol.CustomIntentMaker)>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.CustomIntentMaker$2: void <init>(a2dp.Vol.CustomIntentMaker)>(r0) in <a2dp.Vol.CustomIntentMaker: void <init>()> ==> <a2dp.Vol.CustomIntentMaker$2: void <init>(a2dp.Vol.CustomIntentMaker)>
SPECIAL edge: specialinvoke $r1.<a2dp.Vol.CustomIntentMaker$1: void <init>(a2dp.Vol.CustomIntentMaker)>(r0) in <a2dp.Vol.CustomIntentMaker: void <init>()> ==> <a2dp.Vol.CustomIntentMaker$1: void <init>(a2dp.Vol.CustomIntentMaker)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.service: void <init>()>() in <dummyMainClass: a2dp.Vol.service dummyMainMethod_a2dp_Vol_service(android.content.Intent)> ==> <a2dp.Vol.service: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.service: void onCreate()>() in <dummyMainClass: a2dp.Vol.service dummyMainMethod_a2dp_Vol_service(android.content.Intent)> ==> <a2dp.Vol.service: void onCreate()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<a2dp.Vol.service: int onStartCommand(android.content.Intent,int,int)>(null, 0, 0) in <dummyMainClass: a2dp.Vol.service dummyMainMethod_a2dp_Vol_service(android.content.Intent)> ==> <a2dp.Vol.service: int onStartCommand(android.content.Intent,int,int)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.service: void onAudioFocusChange(int)>(0) in <dummyMainClass: a2dp.Vol.service dummyMainMethod_a2dp_Vol_service(android.content.Intent)> ==> <a2dp.Vol.service: void onAudioFocusChange(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<a2dp.Vol.service: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: a2dp.Vol.service dummyMainMethod_a2dp_Vol_service(android.content.Intent)> ==> <a2dp.Vol.service: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.service: void onDestroy()>() in <dummyMainClass: a2dp.Vol.service dummyMainMethod_a2dp_Vol_service(android.content.Intent)> ==> <a2dp.Vol.service: void onDestroy()>
CLINIT edge: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.service: void <init>()> ==> <java.lang.Boolean: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.service: void <init>()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
CLINIT edge: <a2dp.Vol.service: a2dp.Vol.MyApplication application> = $r4 in <a2dp.Vol.service: void onCreate()> ==> <a2dp.Vol.service: void <clinit>()>
STATIC edge: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <a2dp.Vol.service: void onCreate()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r6) in <a2dp.Vol.service: void onCreate()> ==> <java.lang.Float: java.lang.Float valueOf(java.lang.String)>
STATIC edge: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r6) in <a2dp.Vol.service: void onCreate()> ==> <java.lang.Long: java.lang.Long valueOf(java.lang.String)>
CLINIT edge: <a2dp.Vol.service: android.media.AudioManager am2> = $r12 in <a2dp.Vol.service: void onCreate()> ==> <a2dp.Vol.service: void <clinit>()>
CLINIT edge: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <a2dp.Vol.service: void onCreate()> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r6) in <a2dp.Vol.service: void onCreate()> ==> <java.lang.Float: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r6) in <a2dp.Vol.service: void onCreate()> ==> <java.lang.Long: void <clinit>()>
CLINIT edge: <a2dp.Vol.service: boolean run> = 0 in <a2dp.Vol.service: void onDestroy()> ==> <a2dp.Vol.service: void <clinit>()>
CLINIT edge: $r2 = <a2dp.Vol.service: a2dp.Vol.MyApplication application> in <a2dp.Vol.service: void onDestroy()> ==> <a2dp.Vol.service: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long valueOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: java.lang.Float valueOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: java.lang.Boolean valueOf(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke r9.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: void onDestroy()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r8.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: void onDestroy()> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void clearTts()>() in <a2dp.Vol.service: void onDestroy()> ==> <a2dp.Vol.service: void clearTts()>
CLINIT edge: $r1 = <a2dp.Vol.service: android.media.AudioManager am2> in <a2dp.Vol.service: void clearTts()> ==> <a2dp.Vol.service: void <clinit>()>
VIRTUAL edge: parameter0 = virtualinvoke this.<a2dp.Vol.service: android.content.Intent getIntent()>() in <a2dp.Vol.service: android.os.IBinder onBind(android.content.Intent)> ==> <a2dp.Vol.service: android.content.Intent getIntent()>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.service: android.content.Intent getIntent()>() in <a2dp.Vol.service: int onStartCommand(android.content.Intent,int,int)> ==> <a2dp.Vol.service: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r25.<a2dp.Vol.DeviceDB: void <init>(android.content.Context)>($r4) in <a2dp.Vol.service: void onCreate()> ==> <a2dp.Vol.DeviceDB: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("always") in <a2dp.Vol.service: void onCreate()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("connected_only") in <a2dp.Vol.service: void onCreate()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void registerRecievers()>() in <a2dp.Vol.service: void onCreate()> ==> <a2dp.Vol.service: void registerRecievers()>
SPECIAL edge: specialinvoke $r11.<a2dp.Vol.service$16: void <init>(a2dp.Vol.service)>(r0) in <a2dp.Vol.service: void <init>()> ==> <a2dp.Vol.service$16: void <init>(a2dp.Vol.service)>
SPECIAL edge: specialinvoke $r10.<a2dp.Vol.service$15: void <init>(a2dp.Vol.service)>(r0) in <a2dp.Vol.service: void <init>()> ==> <a2dp.Vol.service$15: void <init>(a2dp.Vol.service)>
SPECIAL edge: specialinvoke $r9.<a2dp.Vol.service$14: void <init>(a2dp.Vol.service)>(r0) in <a2dp.Vol.service: void <init>()> ==> <a2dp.Vol.service$14: void <init>(a2dp.Vol.service)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.service$14: void <init>(a2dp.Vol.service)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r8.<a2dp.Vol.service$12: void <init>(a2dp.Vol.service)>(r0) in <a2dp.Vol.service: void <init>()> ==> <a2dp.Vol.service$12: void <init>(a2dp.Vol.service)>
SPECIAL edge: specialinvoke $r7.<a2dp.Vol.service$8: void <init>(a2dp.Vol.service)>(r0) in <a2dp.Vol.service: void <init>()> ==> <a2dp.Vol.service$8: void <init>(a2dp.Vol.service)>
SPECIAL edge: specialinvoke $r6.<a2dp.Vol.service$5: void <init>(a2dp.Vol.service)>(r0) in <a2dp.Vol.service: void <init>()> ==> <a2dp.Vol.service$5: void <init>(a2dp.Vol.service)>
SPECIAL edge: specialinvoke $r5.<a2dp.Vol.service$4: void <init>(a2dp.Vol.service)>(r0) in <a2dp.Vol.service: void <init>()> ==> <a2dp.Vol.service$4: void <init>(a2dp.Vol.service)>
SPECIAL edge: specialinvoke $r4.<a2dp.Vol.service$3: void <init>(a2dp.Vol.service)>(r0) in <a2dp.Vol.service: void <init>()> ==> <a2dp.Vol.service$3: void <init>(a2dp.Vol.service)>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.service$2: void <init>(a2dp.Vol.service)>(r0) in <a2dp.Vol.service: void <init>()> ==> <a2dp.Vol.service$2: void <init>(a2dp.Vol.service)>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.service$1: void <init>(a2dp.Vol.service)>(r0) in <a2dp.Vol.service: void <init>()> ==> <a2dp.Vol.service$1: void <init>(a2dp.Vol.service)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.Widget: void <init>()>() in <dummyMainClass: a2dp.Vol.Widget dummyMainMethod_a2dp_Vol_Widget(android.content.Intent)> ==> <a2dp.Vol.Widget: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.Widget: void onEnabled(android.content.Context)>(null) in <dummyMainClass: a2dp.Vol.Widget dummyMainMethod_a2dp_Vol_Widget(android.content.Intent)> ==> <a2dp.Vol.Widget: void onEnabled(android.content.Context)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>(null, null, $r1) in <dummyMainClass: a2dp.Vol.Widget dummyMainMethod_a2dp_Vol_Widget(android.content.Intent)> ==> <a2dp.Vol.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.StoreLoc$2: void <init>(a2dp.Vol.StoreLoc)>($r0) in <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)> ==> <a2dp.Vol.StoreLoc$2: void <init>(a2dp.Vol.StoreLoc)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.StoreLoc$2: void onLocationChanged(android.location.Location)>(null) in <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)> ==> <a2dp.Vol.StoreLoc$2: void onLocationChanged(android.location.Location)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.StoreLoc$2: void <init>(a2dp.Vol.StoreLoc)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<a2dp.Vol.StoreLoc$2: void <init>(a2dp.Vol.StoreLoc)>($r0) in <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)> ==> <a2dp.Vol.StoreLoc$2: void <init>(a2dp.Vol.StoreLoc)>
VIRTUAL edge: virtualinvoke $r1.<a2dp.Vol.StoreLoc$2: void onLocationChanged(android.location.Location)>(null) in <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)> ==> <a2dp.Vol.StoreLoc$2: void onLocationChanged(android.location.Location)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.StoreLoc: void <init>()>() in <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)> ==> <a2dp.Vol.StoreLoc: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.StoreLoc: void onCreate()>() in <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)> ==> <a2dp.Vol.StoreLoc: void onCreate()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)>(null, 0, 0) in <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)> ==> <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.StoreLoc: void finalize()>() in <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)> ==> <a2dp.Vol.StoreLoc: void finalize()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<a2dp.Vol.StoreLoc: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)> ==> <a2dp.Vol.StoreLoc: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.StoreLoc: void onDestroy()>() in <dummyMainClass: a2dp.Vol.StoreLoc dummyMainMethod_a2dp_Vol_StoreLoc(android.content.Intent)> ==> <a2dp.Vol.StoreLoc: void onDestroy()>
FINALIZE edge: null in <a2dp.Vol.StoreLoc: void <init>()> ==> <a2dp.Vol.StoreLoc: void finalize()>
CLINIT edge: $r16 = new java.lang.Long in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Long: void <clinit>()>
STATIC edge: r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Long: void <clinit>()>
CLINIT edge: $r17 = new java.lang.Float in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Float: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long valueOf(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.StoreLoc: void onDestroy()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: parameter0 = virtualinvoke this.<a2dp.Vol.StoreLoc: android.content.Intent getIntent()>() in <a2dp.Vol.StoreLoc: android.os.IBinder onBind(android.content.Intent)> ==> <a2dp.Vol.StoreLoc: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke r1.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.StoreLoc: void finalize()> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void finalize()>() in <a2dp.Vol.StoreLoc: void finalize()> ==> <java.lang.Object: void finalize()>
VIRTUAL edge: $r6 = virtualinvoke r15.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke r15.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.String getMessage()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r18.<a2dp.Vol.StoreLoc$1: void <init>(a2dp.Vol.StoreLoc,long,long)>(r0, $l2, 5000L) in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <a2dp.Vol.StoreLoc$1: void <init>(a2dp.Vol.StoreLoc,long,long)>
VIRTUAL edge: $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>() in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Float: float floatValue()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: float floatValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r17.<java.lang.Float: void <init>(java.lang.String)>($r6) in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Float: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Float: void <init>(java.lang.String)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Number: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Number: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $l2 = virtualinvoke r3.<java.lang.Long: long longValue()>() in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Long: long longValue()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long longValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r16.<java.lang.Long: void <init>(java.lang.String)>($r6) in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Long: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Long: void <init>(java.lang.String)> ==> <java.lang.Number: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.StoreLoc: android.content.Intent getIntent()>() in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <a2dp.Vol.StoreLoc: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.StoreLoc: void registerListeners()>() in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <a2dp.Vol.StoreLoc: void registerListeners()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.DeviceDB: void <init>(android.content.Context)>($r1) in <a2dp.Vol.StoreLoc: void onCreate()> ==> <a2dp.Vol.DeviceDB: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r1.<a2dp.Vol.StoreLoc$2: void <init>(a2dp.Vol.StoreLoc)>(r0) in <a2dp.Vol.StoreLoc: void <init>()> ==> <a2dp.Vol.StoreLoc$2: void <init>(a2dp.Vol.StoreLoc)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.PackagesChooser: void <init>()>() in <dummyMainClass: a2dp.Vol.PackagesChooser dummyMainMethod_a2dp_Vol_PackagesChooser(android.content.Intent)> ==> <a2dp.Vol.PackagesChooser: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.PackagesChooser: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: a2dp.Vol.PackagesChooser dummyMainMethod_a2dp_Vol_PackagesChooser(android.content.Intent)> ==> <a2dp.Vol.PackagesChooser: void onCreate(android.os.Bundle)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<a2dp.Vol.PackagesChooser: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: a2dp.Vol.PackagesChooser dummyMainMethod_a2dp_Vol_PackagesChooser(android.content.Intent)> ==> <a2dp.Vol.PackagesChooser: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: $z1 = virtualinvoke $r0.<a2dp.Vol.PackagesChooser: boolean onCreateOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: a2dp.Vol.PackagesChooser dummyMainMethod_a2dp_Vol_PackagesChooser(android.content.Intent)> ==> <a2dp.Vol.PackagesChooser: boolean onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.PackagesChooser: void onBackPressed()>() in <dummyMainClass: a2dp.Vol.PackagesChooser dummyMainMethod_a2dp_Vol_PackagesChooser(android.content.Intent)> ==> <a2dp.Vol.PackagesChooser: void onBackPressed()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.PackagesChooser: void cleanup()>() in <a2dp.Vol.PackagesChooser: void onBackPressed()> ==> <a2dp.Vol.PackagesChooser: void cleanup()>
SPECIAL edge: specialinvoke r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6) in <a2dp.Vol.PackagesChooser: boolean onCreateOptionsMenu(android.view.Menu)> ==> <java.lang.Thread: void <init>(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke r2.<java.lang.Thread: void start()>() in <a2dp.Vol.PackagesChooser: boolean onCreateOptionsMenu(android.view.Menu)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke r2.<java.lang.Thread: void start()>() in <a2dp.Vol.PackagesChooser: boolean onCreateOptionsMenu(android.view.Menu)> ==> <java.lang.Thread: void run()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void start()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.PackagesChooser: void cleanup()>() in <a2dp.Vol.PackagesChooser: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <a2dp.Vol.PackagesChooser: void cleanup()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.PackagesChooser: void setupActionBar()>() in <a2dp.Vol.PackagesChooser: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.PackagesChooser: void setupActionBar()>
VIRTUAL edge: $r2 = virtualinvoke r0.<a2dp.Vol.PackagesChooser: android.app.Application getApplication()>() in <a2dp.Vol.PackagesChooser: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.app.Application getApplication()>
VIRTUAL edge: $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") in <a2dp.Vol.PackagesChooser: void onCreate(android.os.Bundle)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String[] split(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.PackagesChooser$2: void <init>(a2dp.Vol.PackagesChooser)>(r0) in <a2dp.Vol.PackagesChooser: void <init>()> ==> <a2dp.Vol.PackagesChooser$2: void <init>(a2dp.Vol.PackagesChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.PackagesChooser$2: void <init>(a2dp.Vol.PackagesChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.PackagesChooser$1: void <init>(a2dp.Vol.PackagesChooser)>(r0) in <a2dp.Vol.PackagesChooser: void <init>()> ==> <a2dp.Vol.PackagesChooser$1: void <init>(a2dp.Vol.PackagesChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.PackagesChooser$1: void <init>(a2dp.Vol.PackagesChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<a2dp.Vol.ManageData$4: void <init>(a2dp.Vol.ManageData)>($r0) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData$4: void <init>(a2dp.Vol.ManageData)>
VIRTUAL edge: virtualinvoke $r5.<a2dp.Vol.ManageData$4: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData$4: void onClick(android.view.View)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.ManageData: boolean access$100(a2dp.Vol.ManageData)>($r2) in <a2dp.Vol.ManageData$4: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData: boolean access$100(a2dp.Vol.ManageData)>
CLINIT edge: $r4 = newarray (java.lang.String)[2] in <a2dp.Vol.ManageData$4: void onClick(android.view.View)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.ManageData$ExportLocationTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>($r2, null) in <a2dp.Vol.ManageData$4: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportLocationTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportLocationTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$4: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Object doInBackground(java.lang.Object[])>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportLocationTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$4: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportLocationTask: void onPostExecute(java.lang.Object)>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportLocationTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$4: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportLocationTask: void onPreExecute()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ManageData$ExportLocationTask: void onPostExecute(java.lang.Boolean)>($r2) in <a2dp.Vol.ManageData$ExportLocationTask: void onPostExecute(java.lang.Object)> ==> <a2dp.Vol.ManageData$ExportLocationTask: void onPostExecute(java.lang.Boolean)>
STATIC edge: $r4 = staticinvoke <a2dp.Vol.ManageData: android.widget.TextView access$800(a2dp.Vol.ManageData)>($r3) in <a2dp.Vol.ManageData$ExportLocationTask: void onPostExecute(java.lang.Boolean)> ==> <a2dp.Vol.ManageData: android.widget.TextView access$800(a2dp.Vol.ManageData)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.ManageData: java.lang.String access$700(a2dp.Vol.ManageData)>($r3) in <a2dp.Vol.ManageData$ExportLocationTask: void onPostExecute(java.lang.Boolean)> ==> <a2dp.Vol.ManageData: java.lang.String access$700(a2dp.Vol.ManageData)>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])>($r3) in <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Object doInBackground(java.lang.Object[])> ==> <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])>
STATIC edge: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: staticinvoke <a2dp.Vol.ManageData: java.lang.String access$702(a2dp.Vol.ManageData,java.lang.String)>($r5, $r7) in <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData: java.lang.String access$702(a2dp.Vol.ManageData,java.lang.String)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>($r5) in <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>
CLINIT edge: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ManageData$ExportLocationTask: void copyFile(java.io.File,java.io.File)>($r8, r4) in <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData$ExportLocationTask: void copyFile(java.io.File,java.io.File)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.ManageData$ExportLocationTask: void <init>(a2dp.Vol.ManageData)>($r1) in <a2dp.Vol.ManageData$ExportLocationTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)> ==> <a2dp.Vol.ManageData$ExportLocationTask: void <init>(a2dp.Vol.ManageData)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.ManageData$4: void <init>(a2dp.Vol.ManageData)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<a2dp.Vol.ManageData$2: void <init>(a2dp.Vol.ManageData)>($r0) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData$2: void <init>(a2dp.Vol.ManageData)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.ManageData$2: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData$2: void onClick(android.view.View)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.ManageData: boolean access$100(a2dp.Vol.ManageData)>($r2) in <a2dp.Vol.ManageData$2: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData: boolean access$100(a2dp.Vol.ManageData)>
CLINIT edge: $r4 = newarray (java.lang.String)[2] in <a2dp.Vol.ManageData$2: void onClick(android.view.View)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.ManageData$ExportDataAsXmlTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>($r2, null) in <a2dp.Vol.ManageData$2: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDataAsXmlTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDataAsXmlTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$2: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.Object doInBackground(java.lang.Object[])>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDataAsXmlTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$2: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPostExecute(java.lang.Object)>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDataAsXmlTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$2: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPreExecute()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPostExecute(java.lang.String)>($r2) in <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPostExecute(java.lang.Object)> ==> <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPostExecute(java.lang.String)>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.ManageData: android.widget.TextView access$800(a2dp.Vol.ManageData)>($r3) in <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPostExecute(java.lang.String)> ==> <a2dp.Vol.ManageData: android.widget.TextView access$800(a2dp.Vol.ManageData)>
STATIC edge: $r1 = staticinvoke <a2dp.Vol.ManageData: java.lang.String access$700(a2dp.Vol.ManageData)>($r3) in <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPostExecute(java.lang.String)> ==> <a2dp.Vol.ManageData: java.lang.String access$700(a2dp.Vol.ManageData)>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])>($r3) in <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.Object doInBackground(java.lang.Object[])> ==> <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])>
CLINIT edge: $r12 = new a2dp.Vol.DataXmlExporter in <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])> ==> <a2dp.Vol.DataXmlExporter: void <clinit>()>
STATIC edge: staticinvoke <a2dp.Vol.ManageData: java.lang.String access$702(a2dp.Vol.ManageData,java.lang.String)>($r6, r5) in <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData: java.lang.String access$702(a2dp.Vol.ManageData,java.lang.String)>
STATIC edge: $r7 = staticinvoke <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>($r6) in <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>
VIRTUAL edge: virtualinvoke r3.<a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)>(r2, r5) in <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])> ==> <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)>
CLINIT edge: $r6 = newarray (java.lang.String)[0] in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <java.lang.String: void <clinit>()>
VIRTUAL edge: virtualinvoke r3.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r4.<a2dp.Vol.DataXmlExporter$XmlBuilder: void <init>(a2dp.Vol.DataXmlExporter)>(r0) in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <a2dp.Vol.DataXmlExporter$XmlBuilder: void <init>(a2dp.Vol.DataXmlExporter)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.DataXmlExporter$XmlBuilder: void start(java.lang.String)>($r1) in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <a2dp.Vol.DataXmlExporter$XmlBuilder: void start(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r4.<a2dp.Vol.DataXmlExporter$XmlBuilder: java.lang.String end()>() in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <a2dp.Vol.DataXmlExporter$XmlBuilder: java.lang.String end()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.DataXmlExporter$XmlBuilder: void <init>(a2dp.Vol.DataXmlExporter)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.DataXmlExporter: void exportTable(java.lang.String)>($r1) in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <a2dp.Vol.DataXmlExporter: void exportTable(java.lang.String)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.DataXmlExporter: void writeToFile(java.lang.String,java.lang.String)>($r1, $r2) in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <a2dp.Vol.DataXmlExporter: void writeToFile(java.lang.String,java.lang.String)>
CLINIT edge: $r5 = newarray (java.lang.String)[0] in <a2dp.Vol.DataXmlExporter: void exportTable(java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r5 = <a2dp.Vol.DataXmlExporter: java.lang.String DATASUBDIRECTORY> in <a2dp.Vol.DataXmlExporter: void writeToFile(java.lang.String,java.lang.String)> ==> <a2dp.Vol.DataXmlExporter: void <clinit>()>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.DataXmlExporter$XmlBuilder: void openTable(java.lang.String)>($r1) in <a2dp.Vol.DataXmlExporter: void exportTable(java.lang.String)> ==> <a2dp.Vol.DataXmlExporter$XmlBuilder: void openTable(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.DataXmlExporter$XmlBuilder: void openRow()>() in <a2dp.Vol.DataXmlExporter: void exportTable(java.lang.String)> ==> <a2dp.Vol.DataXmlExporter$XmlBuilder: void openRow()>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.DataXmlExporter$XmlBuilder: void addColumn(java.lang.String,java.lang.String)>($r1, $r7) in <a2dp.Vol.DataXmlExporter: void exportTable(java.lang.String)> ==> <a2dp.Vol.DataXmlExporter$XmlBuilder: void addColumn(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.DataXmlExporter$XmlBuilder: void closeRow()>() in <a2dp.Vol.DataXmlExporter: void exportTable(java.lang.String)> ==> <a2dp.Vol.DataXmlExporter$XmlBuilder: void closeRow()>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.DataXmlExporter$XmlBuilder: void closeTable()>() in <a2dp.Vol.DataXmlExporter: void exportTable(java.lang.String)> ==> <a2dp.Vol.DataXmlExporter$XmlBuilder: void closeTable()>
SPECIAL edge: specialinvoke $r12.<a2dp.Vol.DataXmlExporter: void <init>(android.database.sqlite.SQLiteDatabase)>($r9) in <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])> ==> <a2dp.Vol.DataXmlExporter: void <init>(android.database.sqlite.SQLiteDatabase)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.DataXmlExporter: void <init>(android.database.sqlite.SQLiteDatabase)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("android_metadata") in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("sqlite_sequence") in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("uidx") in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("sqlite") in <a2dp.Vol.DataXmlExporter: void export(java.lang.String,java.lang.String)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean startsWith(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>() in <a2dp.Vol.DataXmlExporter: void writeToFile(java.lang.String,java.lang.String)> ==> <java.lang.String: byte[] getBytes()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: byte[] getBytes()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.ManageData$ExportDataAsXmlTask: void <init>(a2dp.Vol.ManageData)>($r1) in <a2dp.Vol.ManageData$ExportDataAsXmlTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)> ==> <a2dp.Vol.ManageData$ExportDataAsXmlTask: void <init>(a2dp.Vol.ManageData)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.ManageData$2: void <init>(a2dp.Vol.ManageData)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.ManageData$3: void <init>(a2dp.Vol.ManageData)>($r0) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData$3: void <init>(a2dp.Vol.ManageData)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$3: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData$3: void onClick(android.view.View)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.ManageData: boolean access$100(a2dp.Vol.ManageData)>($r2) in <a2dp.Vol.ManageData$3: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData: boolean access$100(a2dp.Vol.ManageData)>
CLINIT edge: $r4 = newarray (java.lang.String)[2] in <a2dp.Vol.ManageData$3: void onClick(android.view.View)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.ManageData$ImportDatabaseFileTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>($r2, null) in <a2dp.Vol.ManageData$3: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ImportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$3: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Object doInBackground(java.lang.Object[])>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ImportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$3: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPostExecute(java.lang.Object)>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ImportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$3: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPreExecute()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPostExecute(java.lang.Boolean)>($r2) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPostExecute(java.lang.Object)> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPostExecute(java.lang.Boolean)>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.ManageData: android.widget.TextView access$800(a2dp.Vol.ManageData)>($r4) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPostExecute(java.lang.Boolean)> ==> <a2dp.Vol.ManageData: android.widget.TextView access$800(a2dp.Vol.ManageData)>
STATIC edge: $r8 = staticinvoke <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>($r4) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPostExecute(java.lang.Boolean)> ==> <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>
STATIC edge: $r7 = staticinvoke <a2dp.Vol.ManageData: java.lang.String access$700(a2dp.Vol.ManageData)>($r4) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPostExecute(java.lang.Boolean)> ==> <a2dp.Vol.ManageData: java.lang.String access$700(a2dp.Vol.ManageData)>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])>($r3) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Object doInBackground(java.lang.Object[])> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])>
STATIC edge: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: staticinvoke <a2dp.Vol.ManageData: java.lang.String access$702(a2dp.Vol.ManageData,java.lang.String)>($r6, $r10) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData: java.lang.String access$702(a2dp.Vol.ManageData,java.lang.String)>
STATIC edge: $r7 = staticinvoke <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>($r6) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>
CLINIT edge: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ManageData$ImportDatabaseFileTask: void copyFile(java.io.File,java.io.File)>(r5, r2) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: void copyFile(java.io.File,java.io.File)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.ManageData$ImportDatabaseFileTask: void <init>(a2dp.Vol.ManageData)>($r1) in <a2dp.Vol.ManageData$ImportDatabaseFileTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: void <init>(a2dp.Vol.ManageData)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.ManageData$3: void <init>(a2dp.Vol.ManageData)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.ManageData$1: void <init>(a2dp.Vol.ManageData)>($r0) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData$1: void <init>(a2dp.Vol.ManageData)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.ManageData$1: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData$1: void onClick(android.view.View)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.ManageData: boolean access$100(a2dp.Vol.ManageData)>($r2) in <a2dp.Vol.ManageData$1: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData: boolean access$100(a2dp.Vol.ManageData)>
CLINIT edge: $r4 = newarray (java.lang.String)[0] in <a2dp.Vol.ManageData$1: void onClick(android.view.View)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.ManageData$ExportDatabaseFileTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>($r2, null) in <a2dp.Vol.ManageData$1: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$1: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Object doInBackground(java.lang.Object[])>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$1: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPostExecute(java.lang.Object)>
ASYNCTASK edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$1: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPreExecute()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPostExecute(java.lang.Boolean)>($r2) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPostExecute(java.lang.Object)> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPostExecute(java.lang.Boolean)>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.ManageData: android.widget.TextView access$800(a2dp.Vol.ManageData)>($r3) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPostExecute(java.lang.Boolean)> ==> <a2dp.Vol.ManageData: android.widget.TextView access$800(a2dp.Vol.ManageData)>
STATIC edge: $r7 = staticinvoke <a2dp.Vol.ManageData: java.lang.String access$700(a2dp.Vol.ManageData)>($r3) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPostExecute(java.lang.Boolean)> ==> <a2dp.Vol.ManageData: java.lang.String access$700(a2dp.Vol.ManageData)>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])>($r3) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Object doInBackground(java.lang.Object[])> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])>
STATIC edge: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: staticinvoke <a2dp.Vol.ManageData: java.lang.String access$702(a2dp.Vol.ManageData,java.lang.String)>($r6, $r10) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData: java.lang.String access$702(a2dp.Vol.ManageData,java.lang.String)>
STATIC edge: $r7 = staticinvoke <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>($r6) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>
CLINIT edge: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Boolean: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ManageData$ExportDatabaseFileTask: void copyFile(java.io.File,java.io.File)>(r2, r5) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: void copyFile(java.io.File,java.io.File)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.ManageData$ExportDatabaseFileTask: void <init>(a2dp.Vol.ManageData)>($r1) in <a2dp.Vol.ManageData$ExportDatabaseFileTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: void <init>(a2dp.Vol.ManageData)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.ManageData$1: void <init>(a2dp.Vol.ManageData)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.ManageData: void <init>()>() in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.ManageData: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.ManageData: void onRestoreInstanceState(android.os.Bundle)>(null) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData: void onRestoreInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.ManageData: void finish()>() in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData: void finish()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.ManageData: void onPause()>() in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.ManageData: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData: void onSaveInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.ManageData: void onDestroy()>() in <dummyMainClass: a2dp.Vol.ManageData dummyMainMethod_a2dp_Vol_ManageData(android.content.Intent)> ==> <a2dp.Vol.ManageData: void onDestroy()>
CLINIT edge: $r10 = newarray (java.lang.String)[0] in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <java.lang.String: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ManageData: void setResult(int,android.content.Intent)>($i0, $r1) in <a2dp.Vol.ManageData: void onDestroy()> ==> <a2dp.Vol.ManageData: void setResult(int,android.content.Intent)>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ManageData: void setResult(int,android.content.Intent)>($i0, $r1) in <a2dp.Vol.ManageData: void finish()> ==> <a2dp.Vol.ManageData: void setResult(int,android.content.Intent)>
SPECIAL edge: specialinvoke $r15.<a2dp.Vol.ManageData$4: void <init>(a2dp.Vol.ManageData)>(r0) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$4: void <init>(a2dp.Vol.ManageData)>
SPECIAL edge: specialinvoke $r14.<a2dp.Vol.ManageData$3: void <init>(a2dp.Vol.ManageData)>(r0) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$3: void <init>(a2dp.Vol.ManageData)>
SPECIAL edge: specialinvoke $r13.<a2dp.Vol.ManageData$2: void <init>(a2dp.Vol.ManageData)>(r0) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$2: void <init>(a2dp.Vol.ManageData)>
SPECIAL edge: specialinvoke $r12.<a2dp.Vol.ManageData$1: void <init>(a2dp.Vol.ManageData)>(r0) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$1: void <init>(a2dp.Vol.ManageData)>
SPECIAL edge: specialinvoke $r9.<a2dp.Vol.ManageData$SelectDataTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>(r0, null) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$SelectDataTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)>
ASYNCTASK edge: virtualinvoke $r9.<a2dp.Vol.ManageData$SelectDataTask: android.os.AsyncTask execute(java.lang.Object[])>($r10) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$SelectDataTask: java.lang.Object doInBackground(java.lang.Object[])>
ASYNCTASK edge: virtualinvoke $r9.<a2dp.Vol.ManageData$SelectDataTask: android.os.AsyncTask execute(java.lang.Object[])>($r10) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$SelectDataTask: void onPostExecute(java.lang.Object)>
ASYNCTASK edge: virtualinvoke $r9.<a2dp.Vol.ManageData$SelectDataTask: android.os.AsyncTask execute(java.lang.Object[])>($r10) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$SelectDataTask: void onPreExecute()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.ManageData$SelectDataTask: void onPostExecute(java.lang.String)>($r2) in <a2dp.Vol.ManageData$SelectDataTask: void onPostExecute(java.lang.Object)> ==> <a2dp.Vol.ManageData$SelectDataTask: void onPostExecute(java.lang.String)>
STATIC edge: $r4 = staticinvoke <a2dp.Vol.ManageData: android.widget.TextView access$900(a2dp.Vol.ManageData)>($r3) in <a2dp.Vol.ManageData$SelectDataTask: void onPostExecute(java.lang.String)> ==> <a2dp.Vol.ManageData: android.widget.TextView access$900(a2dp.Vol.ManageData)>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.ManageData$SelectDataTask: java.lang.String doInBackground(java.lang.String[])>($r3) in <a2dp.Vol.ManageData$SelectDataTask: java.lang.Object doInBackground(java.lang.Object[])> ==> <a2dp.Vol.ManageData$SelectDataTask: java.lang.String doInBackground(java.lang.String[])>
STATIC edge: $r4 = staticinvoke <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>($r3) in <a2dp.Vol.ManageData$SelectDataTask: java.lang.String doInBackground(java.lang.String[])> ==> <a2dp.Vol.ManageData: a2dp.Vol.MyApplication access$600(a2dp.Vol.ManageData)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.ManageData$SelectDataTask: void <init>(a2dp.Vol.ManageData)>($r1) in <a2dp.Vol.ManageData$SelectDataTask: void <init>(a2dp.Vol.ManageData,a2dp.Vol.ManageData$1)> ==> <a2dp.Vol.ManageData$SelectDataTask: void <init>(a2dp.Vol.ManageData)>
VIRTUAL edge: $r2 = virtualinvoke r0.<a2dp.Vol.ManageData: android.app.Application getApplication()>() in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.app.Application getApplication()>
SPECIAL edge: specialinvoke $r18.<a2dp.Vol.main$2: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$2: void <init>(a2dp.Vol.main)>
VIRTUAL edge: virtualinvoke $r18.<a2dp.Vol.main$2: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$2: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r3 = staticinvoke <a2dp.Vol.main: a2dp.Vol.DeviceDB access$000(a2dp.Vol.main)>($r2) in <a2dp.Vol.main$2: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: void <clinit>()>
STATIC edge: staticinvoke <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>($r2, $i0) in <a2dp.Vol.main$2: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>
STATIC edge: $i0 = staticinvoke <a2dp.Vol.main: int access$100(a2dp.Vol.main)>($r4) in <a2dp.Vol.main$2: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: int access$100(a2dp.Vol.main)>
STATIC edge: $r3 = staticinvoke <a2dp.Vol.main: a2dp.Vol.DeviceDB access$000(a2dp.Vol.main)>($r2) in <a2dp.Vol.main$2: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: a2dp.Vol.DeviceDB access$000(a2dp.Vol.main)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$2: void <init>(a2dp.Vol.main)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r17.<a2dp.Vol.main$7: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$7: void <init>(a2dp.Vol.main)>
VIRTUAL edge: $z3 = virtualinvoke $r17.<a2dp.Vol.main$7: boolean onLongClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$7: boolean onLongClick(android.view.View)>
CLINIT edge: $r12 = new java.lang.String in <a2dp.Vol.main$7: boolean onLongClick(android.view.View)> ==> <java.lang.String: void <clinit>()>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>() in <a2dp.Vol.main$7: boolean onLongClick(android.view.View)> ==> <java.lang.String: java.lang.String trim()>
SPECIAL edge: specialinvoke $r12.<java.lang.String: void <init>(byte[])>(r2) in <a2dp.Vol.main$7: boolean onLongClick(android.view.View)> ==> <java.lang.String: void <init>(byte[])>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$7: void <init>(a2dp.Vol.main)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r16.<a2dp.Vol.main$5: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$5: void <init>(a2dp.Vol.main)>
VIRTUAL edge: virtualinvoke $r16.<a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
CLINIT edge: $r8 = staticinvoke <a2dp.Vol.main: a2dp.Vol.DeviceDB access$000(a2dp.Vol.main)>($r4) in <a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main: void <clinit>()>
STATIC edge: $r8 = staticinvoke <a2dp.Vol.main: a2dp.Vol.DeviceDB access$000(a2dp.Vol.main)>($r4) in <a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main: a2dp.Vol.DeviceDB access$000(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r13.<a2dp.Vol.main$5$2: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)>(r0, r7) in <a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main$5$2: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$5$2: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r12.<a2dp.Vol.main$5$1: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)>(r0, $r10) in <a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main$5$1: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$5$1: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$5: void <init>(a2dp.Vol.main)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r15.<a2dp.Vol.main$3: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$3: void <init>(a2dp.Vol.main)>
VIRTUAL edge: virtualinvoke $r15.<a2dp.Vol.main$3: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$3: void onClick(android.view.View)>
CLINIT edge: staticinvoke <a2dp.Vol.main: int access$300(a2dp.Vol.main,int)>($r2, 1) in <a2dp.Vol.main$3: void onClick(android.view.View)> ==> <a2dp.Vol.main: void <clinit>()>
STATIC edge: staticinvoke <a2dp.Vol.main: int access$300(a2dp.Vol.main,int)>($r2, 1) in <a2dp.Vol.main$3: void onClick(android.view.View)> ==> <a2dp.Vol.main: int access$300(a2dp.Vol.main,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$3: void <init>(a2dp.Vol.main)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r14.<a2dp.Vol.main$4$1: void <init>(a2dp.Vol.main$4,java.lang.String)>($r13, "") in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$4$1: void <init>(a2dp.Vol.main$4,java.lang.String)>
VIRTUAL edge: virtualinvoke $r14.<a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)>
STATIC edge: $r12 = staticinvoke <a2dp.Vol.main: a2dp.Vol.MyApplication access$800(a2dp.Vol.main)>($r7) in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: a2dp.Vol.MyApplication access$800(a2dp.Vol.main)>
STATIC edge: $r8 = staticinvoke <a2dp.Vol.main: java.lang.String access$700(a2dp.Vol.main)>($r7) in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: java.lang.String access$700(a2dp.Vol.main)>
CLINIT edge: $r12 = staticinvoke <a2dp.Vol.main: a2dp.Vol.MyApplication access$800(a2dp.Vol.main)>($r7) in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: void <clinit>()>
CLINIT edge: $r16 = new java.lang.String in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r8 = staticinvoke <a2dp.Vol.main: java.lang.String access$700(a2dp.Vol.main)>($r7) in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: void <clinit>()>
VIRTUAL edge: $r8 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>() in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <java.lang.Throwable: java.lang.String toString()>
VIRTUAL edge: virtualinvoke r2.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r16.<java.lang.String: void <init>(java.lang.String)>($r8) in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <java.lang.String: void <init>(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>() in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <java.lang.String: java.lang.String trim()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$4$1: void <init>(a2dp.Vol.main$4,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r13.<a2dp.Vol.main$4: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$4: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$4: void <init>(a2dp.Vol.main)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r12.<a2dp.Vol.main$6: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$6: void <init>(a2dp.Vol.main)>
VIRTUAL edge: virtualinvoke $r12.<a2dp.Vol.main$6: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$6: void onClick(android.view.View)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$6: void <init>(a2dp.Vol.main)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r11.<a2dp.Vol.main$1: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$1: void <init>(a2dp.Vol.main)>
VIRTUAL edge: virtualinvoke $r11.<a2dp.Vol.main$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$1: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$1: void <init>(a2dp.Vol.main)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r10.<a2dp.Vol.main$10: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$10: void <init>(a2dp.Vol.main)>
VIRTUAL edge: virtualinvoke $r10.<a2dp.Vol.main$10: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$10: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$10: void <init>(a2dp.Vol.main)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r9.<a2dp.Vol.main$5$1: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)>($r7, $r8) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$5$1: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)>
VIRTUAL edge: virtualinvoke $r9.<a2dp.Vol.main$5$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$5$1: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r4 = staticinvoke <a2dp.Vol.main: a2dp.Vol.DeviceDB access$000(a2dp.Vol.main)>($r3) in <a2dp.Vol.main$5$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: void <clinit>()>
STATIC edge: staticinvoke <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>($r3, $i0) in <a2dp.Vol.main$5$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>
STATIC edge: $i0 = staticinvoke <a2dp.Vol.main: int access$100(a2dp.Vol.main)>($r6) in <a2dp.Vol.main$5$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: int access$100(a2dp.Vol.main)>
STATIC edge: $r4 = staticinvoke <a2dp.Vol.main: a2dp.Vol.DeviceDB access$000(a2dp.Vol.main)>($r3) in <a2dp.Vol.main$5$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.main: a2dp.Vol.DeviceDB access$000(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r8.<a2dp.Vol.btDevice: void <init>()>() in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.btDevice: void <init>()>
SPECIAL edge: specialinvoke $r7.<a2dp.Vol.main$5: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$5: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r6.<a2dp.Vol.main$4: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$4: void <init>(a2dp.Vol.main)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
CLINIT edge: $r14 = staticinvoke <a2dp.Vol.main: java.lang.String access$400(a2dp.Vol.main,android.bluetooth.BluetoothDevice)>($r4, r9) in <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main: void <clinit>()>
STATIC edge: $r14 = staticinvoke <a2dp.Vol.main: java.lang.String access$600(a2dp.Vol.main,android.bluetooth.BluetoothDevice)>($r4, r9) in <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main: java.lang.String access$600(a2dp.Vol.main,android.bluetooth.BluetoothDevice)>
STATIC edge: $r14 = staticinvoke <a2dp.Vol.main: java.lang.String access$500(a2dp.Vol.main,android.bluetooth.BluetoothDevice)>($r4, r9) in <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main: java.lang.String access$500(a2dp.Vol.main,android.bluetooth.BluetoothDevice)>
STATIC edge: $r14 = staticinvoke <a2dp.Vol.main: java.lang.String access$400(a2dp.Vol.main,android.bluetooth.BluetoothDevice)>($r4, r9) in <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main: java.lang.String access$400(a2dp.Vol.main,android.bluetooth.BluetoothDevice)>
SPECIAL edge: specialinvoke $r18.<a2dp.Vol.main$4$1: void <init>(a2dp.Vol.main$4,java.lang.String)>(r0, $r13) in <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main$4$1: void <init>(a2dp.Vol.main$4,java.lang.String)>
SPECIAL edge: specialinvoke r7.<a2dp.Vol.btDevice: void <init>()>() in <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.btDevice: void <init>()>
VIRTUAL edge: $r13 = virtualinvoke r7.<a2dp.Vol.btDevice: java.lang.String toString()>() in <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.btDevice: java.lang.String toString()>
SPECIAL edge: specialinvoke $r5.<a2dp.Vol.main$5$2: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)>($r3, $r4) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$5$2: void <init>(a2dp.Vol.main$5,a2dp.Vol.btDevice)>
VIRTUAL edge: virtualinvoke $r5.<a2dp.Vol.main$5$2: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$5$2: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r4.<a2dp.Vol.btDevice: void <init>()>() in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.btDevice: void <init>()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.main$5: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$5: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.main$8: void <init>(a2dp.Vol.main)>($r0) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$8: void <init>(a2dp.Vol.main)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.main$8: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main$8: void onClick(android.view.View)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.main$8: void <init>(a2dp.Vol.main)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.main: void <init>()>() in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.main: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.main: void onResume()>() in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)>(0, 0, null) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)>
VIRTUAL edge: $z1 = virtualinvoke $r0.<a2dp.Vol.main: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: $z2 = virtualinvoke $r0.<a2dp.Vol.main: boolean onCreateOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: boolean onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.main: void onPause()>() in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.main: void onStop()>() in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.main: void onRestart()>() in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: void onRestart()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.main: void onDestroy()>() in <dummyMainClass: a2dp.Vol.main dummyMainMethod_a2dp_Vol_main(android.content.Intent)> ==> <a2dp.Vol.main: void onDestroy()>
CLINIT edge: i0 = <a2dp.Vol.main: int resourceID> in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main: void <clinit>()>
CLINIT edge: $r21 = <a2dp.Vol.main: android.widget.Button serv> in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main: void <clinit>()>
CLINIT edge: $r23 = newarray (java.lang.String)[1] in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: <a2dp.Vol.main: android.media.AudioManager am> = $r17 in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main: void <clinit>()>
CLINIT edge: $r7 = newarray (java.lang.String)[$i2] in <a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)> ==> <java.lang.String: void <clinit>()>
VIRTUAL edge: virtualinvoke r1.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main: void onDestroy()> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r9.<a2dp.Vol.main$1: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <a2dp.Vol.main$1: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r8.<a2dp.Vol.main$2: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <a2dp.Vol.main$2: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r15.<a2dp.Vol.main$10: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)> ==> <a2dp.Vol.main$10: void <init>(a2dp.Vol.main)>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.main: android.content.Intent getIntent()>() in <a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)> ==> <a2dp.Vol.main: android.content.Intent getIntent()>
SPECIAL edge: $i2 = specialinvoke r0.<a2dp.Vol.main: int loadFromDB()>() in <a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)> ==> <a2dp.Vol.main: int loadFromDB()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.main: void refreshList(int)>($i2) in <a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)> ==> <a2dp.Vol.main: void refreshList(int)>
SPECIAL edge: $i2 = specialinvoke r0.<a2dp.Vol.main: int getBtDevices(int)>(1) in <a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)> ==> <a2dp.Vol.main: int getBtDevices(int)>
SPECIAL edge: $r12 = specialinvoke r0.<a2dp.Vol.main: android.content.DialogInterface$OnClickListener setIgnore()>() in <a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)> ==> <a2dp.Vol.main: android.content.DialogInterface$OnClickListener setIgnore()>
CLINIT edge: $r1 = newarray (java.lang.String)[$i0] in <a2dp.Vol.main: void refreshList(int)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $i0 = <a2dp.Vol.main: int resourceID> in <a2dp.Vol.main: void refreshList(int)> ==> <a2dp.Vol.main: void <clinit>()>
CLINIT edge: $r1 = newarray (java.lang.String)[1] in <a2dp.Vol.main: void refreshList(int)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r6 = <a2dp.Vol.service: a2dp.Vol.btDevice[] btdConn> in <a2dp.Vol.main: void refreshList(int)> ==> <a2dp.Vol.service: void <clinit>()>
CLINIT edge: $r5 = <a2dp.Vol.main: android.media.AudioManager am> in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.main: void <clinit>()>
VIRTUAL edge: virtualinvoke r11.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main: int getBtDevices(int)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)>($r4, $r4, "1", $i2) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setIcon(int)>(2130837504) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)>($r4, $r4, "2", $i2) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setGetLoc(boolean)>(0) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void setGetLoc(boolean)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setIcon(int)>(2130837509) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)>($r4, $r4, "3", $i2) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setIcon(int)>(2130837508) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)>($r4, $r4, "4", $i2) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setBluetoothDevice(android.bluetooth.BluetoothDevice,java.lang.String,int)>(r16, $r4, $i0) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void setBluetoothDevice(android.bluetooth.BluetoothDevice,java.lang.String,int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setSetV(boolean)>(0) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void setSetV(boolean)>
CLINIT edge: $r1 = staticinvoke <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)>($r2) in <a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)> ==> <a2dp.Vol.FileNameCleaner: void <clinit>()>
STATIC edge: $r1 = staticinvoke <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)>($r2) in <a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)> ==> <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)>
CLINIT edge: $r2 = staticinvoke <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)>($r2) in <a2dp.Vol.btDevice: void setBluetoothDevice(android.bluetooth.BluetoothDevice,java.lang.String,int)> ==> <a2dp.Vol.FileNameCleaner: void <clinit>()>
STATIC edge: $r2 = staticinvoke <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)>($r2) in <a2dp.Vol.btDevice: void setBluetoothDevice(android.bluetooth.BluetoothDevice,java.lang.String,int)> ==> <a2dp.Vol.FileNameCleaner: java.lang.String cleanFileName(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.btDevice: void setIcon(int)>(2130837504) in <a2dp.Vol.btDevice: void setBluetoothDevice(android.bluetooth.BluetoothDevice,java.lang.String,int)> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.btDevice: void setIcon(int)>(2130837504) in <a2dp.Vol.btDevice: void setBluetoothDevice(java.lang.String,java.lang.String,java.lang.String,int)> ==> <a2dp.Vol.btDevice: void setIcon(int)>
SPECIAL edge: specialinvoke $r7.<a2dp.Vol.btDevice: void <init>()>() in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.btDevice: void <init>()>
SPECIAL edge: $i2 = specialinvoke r0.<a2dp.Vol.main: int loadFromDB()>() in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.main: int loadFromDB()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.main: void refreshList(int)>($i2) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.main: void refreshList(int)>
SPECIAL edge: $r13 = specialinvoke r0.<a2dp.Vol.main: android.bluetooth.IBluetooth getIBluetooth()>() in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.main: android.bluetooth.IBluetooth getIBluetooth()>
SPECIAL edge: $i0 = specialinvoke r0.<a2dp.Vol.main: int loadFromDB()>() in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.main: int loadFromDB()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.main: void refreshList(int)>($i0) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.main: void refreshList(int)>
STATIC edge: r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.os.ServiceManager") in <a2dp.Vol.main: android.bluetooth.IBluetooth getIBluetooth()> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.bluetooth.IBluetooth") in <a2dp.Vol.main: android.bluetooth.IBluetooth getIBluetooth()> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class forName(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.main: android.bluetooth.IBluetooth getIBluetooth()> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r4 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getService", $r3) in <a2dp.Vol.main: android.bluetooth.IBluetooth getIBluetooth()> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: $r4 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("asInterface", $r3) in <a2dp.Vol.main: android.bluetooth.IBluetooth getIBluetooth()> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7) in <a2dp.Vol.main: void refreshList(int)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: virtualinvoke r6.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main: int loadFromDB()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r5.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main: int loadFromDB()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.main: int loadFromDB()> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.DeviceDB: void <init>(android.content.Context)>($r1) in <a2dp.Vol.main: int loadFromDB()> ==> <a2dp.Vol.DeviceDB: void <init>(android.content.Context)>
VIRTUAL edge: $r4 = virtualinvoke $r2.<a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()>() in <a2dp.Vol.main: int loadFromDB()> ==> <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()>
CLINIT edge: $r4 = newarray (java.lang.String)[27] in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke r1.<a2dp.Vol.btDevice: void <init>()>() in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void <init>()>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setDesc1(java.lang.String)>($r6) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setDesc1(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setDesc2(java.lang.String)>($r6) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setDesc2(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setMac(java.lang.String)>($r6) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setMac(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setSetV(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setSetV(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setDefVol(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setDefVol(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setGetLoc(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setGetLoc(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setPname(java.lang.String)>($r6) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setPname(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setBdevice(java.lang.String)>($r6) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setBdevice(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setWifi(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setWifi(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setAppaction(java.lang.String)>($r6) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setAppaction(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setAppdata(java.lang.String)>($r6) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setAppdata(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setApptype(java.lang.String)>($r6) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setApptype(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setApprestart(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setApprestart(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setEnableTTS(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setEnableTTS(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setSetpv(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setSetpv(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setPhonev(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setPhonev(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setAppkill(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setAppkill(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setEnablegps(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setEnablegps(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setIcon(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setSmsdelay(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setSmsdelay(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setSmsstream(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setSmsstream(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setVoldelay(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setVoldelay(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setVolramp(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setVolramp(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setAutovol(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setAutovol(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setSilent(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setSilent(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setSleep(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setSleep(int)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.btDevice: void setCarmode(int)>($i0) in <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()> ==> <a2dp.Vol.btDevice: void setCarmode(int)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.main: void getConnects()>() in <a2dp.Vol.main: void onResume()> ==> <a2dp.Vol.main: void getConnects()>
SPECIAL edge: $i0 = specialinvoke r0.<a2dp.Vol.main: int loadFromDB()>() in <a2dp.Vol.main: void onResume()> ==> <a2dp.Vol.main: int loadFromDB()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.main: void refreshList(int)>($i0) in <a2dp.Vol.main: void onResume()> ==> <a2dp.Vol.main: void refreshList(int)>
CLINIT edge: $r1 = <a2dp.Vol.service: java.lang.Integer connects> in <a2dp.Vol.main: void getConnects()> ==> <a2dp.Vol.service: void <clinit>()>
VIRTUAL edge: virtualinvoke r31.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: r8 = virtualinvoke r4.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke r30.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r29.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: r8 = virtualinvoke r28.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <java.lang.Throwable: java.lang.String getMessage()>
SPECIAL edge: specialinvoke $r45.<a2dp.Vol.main$9: void <init>(a2dp.Vol.main,long,long)>(r0, 2000L, 1000L) in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main$9: void <init>(a2dp.Vol.main,long,long)>
SPECIAL edge: specialinvoke $r44.<a2dp.Vol.main$8: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main$8: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r43.<a2dp.Vol.main$7: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main$7: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r42.<a2dp.Vol.main$6: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main$6: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r41.<a2dp.Vol.main$5: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main$5: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r40.<a2dp.Vol.main$4: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main$4: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r39.<a2dp.Vol.main$3: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main$3: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r36.<a2dp.Vol.DeviceDB: void <init>(android.content.Context)>($r14) in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.DeviceDB: void <init>(android.content.Context)>
VIRTUAL edge: $r13 = virtualinvoke r0.<a2dp.Vol.main: android.app.Application getApplication()>() in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.app.Application getApplication()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.main: int getBtDevices(int)>(1) in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main: int getBtDevices(int)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.main: void getConnects()>() in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main: void getConnects()>
SPECIAL edge: i0 = specialinvoke r0.<a2dp.Vol.main: int loadFromDB()>() in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main: int loadFromDB()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.main: void refreshList(int)>(i0) in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.main: void refreshList(int)>
VIRTUAL edge: $i1 = virtualinvoke $r24.<a2dp.Vol.DeviceDB: int getLength()>() in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.DeviceDB: int getLength()>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.DeviceDB: java.util.List selectAll()>() in <a2dp.Vol.DeviceDB: int getLength()> ==> <a2dp.Vol.DeviceDB: java.util.List selectAll()>
CLINIT edge: $r1 = newarray (java.lang.String)[2] in <a2dp.Vol.DeviceDB: java.util.List selectAll()> ==> <java.lang.String: void <clinit>()>
VIRTUAL edge: virtualinvoke r2.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.DeviceDB: java.util.List selectAll()> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r4.<a2dp.Vol.main$13: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: void <init>()> ==> <a2dp.Vol.main$13: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.main$12: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: void <init>()> ==> <a2dp.Vol.main$12: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.main$11: void <init>(a2dp.Vol.main)>(r0) in <a2dp.Vol.main: void <init>()> ==> <a2dp.Vol.main$11: void <init>(a2dp.Vol.main)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.NotificationCatcher: void <init>()>() in <dummyMainClass: a2dp.Vol.NotificationCatcher dummyMainMethod_a2dp_Vol_NotificationCatcher(android.content.Intent)> ==> <a2dp.Vol.NotificationCatcher: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.NotificationCatcher: void onCreate()>() in <dummyMainClass: a2dp.Vol.NotificationCatcher dummyMainMethod_a2dp_Vol_NotificationCatcher(android.content.Intent)> ==> <a2dp.Vol.NotificationCatcher: void onCreate()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.NotificationCatcher: void onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap)>(null, null) in <dummyMainClass: a2dp.Vol.NotificationCatcher dummyMainMethod_a2dp_Vol_NotificationCatcher(android.content.Intent)> ==> <a2dp.Vol.NotificationCatcher: void onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService$RankingMap)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.NotificationCatcher: void onNotificationRemoved(android.service.notification.StatusBarNotification)>(null) in <dummyMainClass: a2dp.Vol.NotificationCatcher dummyMainMethod_a2dp_Vol_NotificationCatcher(android.content.Intent)> ==> <a2dp.Vol.NotificationCatcher: void onNotificationRemoved(android.service.notification.StatusBarNotification)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.NotificationCatcher: void onNotificationPosted(android.service.notification.StatusBarNotification)>(null) in <dummyMainClass: a2dp.Vol.NotificationCatcher dummyMainMethod_a2dp_Vol_NotificationCatcher(android.content.Intent)> ==> <a2dp.Vol.NotificationCatcher: void onNotificationPosted(android.service.notification.StatusBarNotification)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<a2dp.Vol.NotificationCatcher: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: a2dp.Vol.NotificationCatcher dummyMainMethod_a2dp_Vol_NotificationCatcher(android.content.Intent)> ==> <a2dp.Vol.NotificationCatcher: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.NotificationCatcher: void onDestroy()>() in <dummyMainClass: a2dp.Vol.NotificationCatcher dummyMainMethod_a2dp_Vol_NotificationCatcher(android.content.Intent)> ==> <a2dp.Vol.NotificationCatcher: void onDestroy()>
VIRTUAL edge: parameter0 = virtualinvoke this.<a2dp.Vol.NotificationCatcher: android.content.Intent getIntent()>() in <a2dp.Vol.NotificationCatcher: android.os.IBinder onBind(android.content.Intent)> ==> <a2dp.Vol.NotificationCatcher: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.NotificationCatcher$Readit: void <init>(a2dp.Vol.NotificationCatcher,a2dp.Vol.NotificationCatcher$1)>(r0, null) in <a2dp.Vol.NotificationCatcher: void onNotificationPosted(android.service.notification.StatusBarNotification)> ==> <a2dp.Vol.NotificationCatcher$Readit: void <init>(a2dp.Vol.NotificationCatcher,a2dp.Vol.NotificationCatcher$1)>
ASYNCTASK edge: virtualinvoke $r2.<a2dp.Vol.NotificationCatcher$Readit: android.os.AsyncTask execute(java.lang.Object[])>($r3) in <a2dp.Vol.NotificationCatcher: void onNotificationPosted(android.service.notification.StatusBarNotification)> ==> <a2dp.Vol.NotificationCatcher$Readit: java.lang.Object doInBackground(java.lang.Object[])>
VIRTUAL edge: $r1 = virtualinvoke r0.<a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])>($r3) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Object doInBackground(java.lang.Object[])> ==> <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])>
CLINIT edge: $r10 = <a2dp.Vol.service: java.lang.Integer connects> in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <a2dp.Vol.service: void <clinit>()>
STATIC edge: $r30 = staticinvoke <a2dp.Vol.NotificationCatcher: a2dp.Vol.MyApplication access$200(a2dp.Vol.NotificationCatcher)>($r13) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <a2dp.Vol.NotificationCatcher: a2dp.Vol.MyApplication access$200(a2dp.Vol.NotificationCatcher)>
STATIC edge: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r11 = staticinvoke <a2dp.Vol.NotificationCatcher: java.lang.String[] access$100()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <a2dp.Vol.NotificationCatcher: java.lang.String[] access$100()>
CLINIT edge: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.Long: void <clinit>()>
VIRTUAL edge: z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r15) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $i1 = virtualinvoke $r12.<java.lang.String: int length()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: int length()>
VIRTUAL edge: z0 = virtualinvoke $r12.<java.lang.String: boolean isEmpty()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: boolean isEmpty()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean isEmpty()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r23.<a2dp.Vol.NotificationCatcher$notItem: void <init>(a2dp.Vol.NotificationCatcher,java.lang.String,java.lang.Long)>($r13, $r15, $r19) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <a2dp.Vol.NotificationCatcher$notItem: void <init>(a2dp.Vol.NotificationCatcher,java.lang.String,java.lang.Long)>
VIRTUAL edge: $r12 = virtualinvoke r23.<a2dp.Vol.NotificationCatcher$notItem: java.lang.String getNot()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <a2dp.Vol.NotificationCatcher$notItem: java.lang.String getNot()>
VIRTUAL edge: $r24 = virtualinvoke r23.<a2dp.Vol.NotificationCatcher$notItem: java.lang.Long getNottime()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <a2dp.Vol.NotificationCatcher$notItem: java.lang.Long getNottime()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.NotificationCatcher$notItem: void <init>(a2dp.Vol.NotificationCatcher,java.lang.String,java.lang.Long)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r15 = virtualinvoke $r15.<java.lang.String: java.lang.String toString()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: java.lang.String toString()>
VIRTUAL edge: z0 = virtualinvoke $r15.<java.lang.String: boolean isEmpty()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: boolean isEmpty()>
VIRTUAL edge: z0 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $i1 = virtualinvoke r8.<java.lang.String: int length()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: int length()>
VIRTUAL edge: z0 = virtualinvoke r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12) in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: boolean isEmpty()>
VIRTUAL edge: virtualinvoke r3.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.NotificationCatcher$Readit: void <init>(a2dp.Vol.NotificationCatcher)>($r1) in <a2dp.Vol.NotificationCatcher$Readit: void <init>(a2dp.Vol.NotificationCatcher,a2dp.Vol.NotificationCatcher$1)> ==> <a2dp.Vol.NotificationCatcher$Readit: void <init>(a2dp.Vol.NotificationCatcher)>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.NotificationCatcher: void LoadPrefs()>() in <a2dp.Vol.NotificationCatcher: void onCreate()> ==> <a2dp.Vol.NotificationCatcher: void LoadPrefs()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.NotificationCatcher$2: void <init>(a2dp.Vol.NotificationCatcher)>(r0) in <a2dp.Vol.NotificationCatcher: void <init>()> ==> <a2dp.Vol.NotificationCatcher$2: void <init>(a2dp.Vol.NotificationCatcher)>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.NotificationCatcher$1: void <init>(a2dp.Vol.NotificationCatcher)>(r0) in <a2dp.Vol.NotificationCatcher: void <init>()> ==> <a2dp.Vol.NotificationCatcher$1: void <init>(a2dp.Vol.NotificationCatcher)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.Preferences: void <init>()>() in <dummyMainClass: a2dp.Vol.Preferences dummyMainMethod_a2dp_Vol_Preferences(android.content.Intent)> ==> <a2dp.Vol.Preferences: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.Preferences: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: a2dp.Vol.Preferences dummyMainMethod_a2dp_Vol_Preferences(android.content.Intent)> ==> <a2dp.Vol.Preferences: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.Preferences: void onContentChanged()>() in <dummyMainClass: a2dp.Vol.Preferences dummyMainMethod_a2dp_Vol_Preferences(android.content.Intent)> ==> <a2dp.Vol.Preferences: void onContentChanged()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.Preferences: void onDestroy()>() in <dummyMainClass: a2dp.Vol.Preferences dummyMainMethod_a2dp_Vol_Preferences(android.content.Intent)> ==> <a2dp.Vol.Preferences: void onDestroy()>
VIRTUAL edge: $r4 = virtualinvoke r0.<a2dp.Vol.Preferences: android.app.Application getApplication()>() in <a2dp.Vol.Preferences: void onDestroy()> ==> <android.app.Activity: android.app.Application getApplication()>
SPECIAL edge: specialinvoke $r6.<a2dp.Vol.AppChooser$4: void <init>(a2dp.Vol.AppChooser)>($r0) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser$4: void <init>(a2dp.Vol.AppChooser)>
VIRTUAL edge: $z1 = virtualinvoke $r6.<a2dp.Vol.AppChooser$4: boolean onKey(android.view.View,int,android.view.KeyEvent)>(null, 0, null) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser$4: boolean onKey(android.view.View,int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.AppChooser$4: void <init>(a2dp.Vol.AppChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<a2dp.Vol.AppChooser$2: void <init>(a2dp.Vol.AppChooser)>($r0) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser$2: void <init>(a2dp.Vol.AppChooser)>
VIRTUAL edge: virtualinvoke $r5.<a2dp.Vol.AppChooser$2: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser$2: void onClick(android.view.View)>
STATIC edge: $r2 = staticinvoke <a2dp.Vol.AppChooser: android.widget.EditText access$000(a2dp.Vol.AppChooser)>($r3) in <a2dp.Vol.AppChooser$2: void onClick(android.view.View)> ==> <a2dp.Vol.AppChooser: android.widget.EditText access$000(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.AppChooser$2: void <init>(a2dp.Vol.AppChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<a2dp.Vol.AppChooser$3: void <init>(a2dp.Vol.AppChooser)>($r0) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser$3: void <init>(a2dp.Vol.AppChooser)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<a2dp.Vol.AppChooser$3: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(null, 0, null) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser$3: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.AppChooser$3: void <init>(a2dp.Vol.AppChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.AppChooser$5: void <init>(a2dp.Vol.AppChooser)>($r0) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser$5: void <init>(a2dp.Vol.AppChooser)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.AppChooser$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.AppChooser: java.util.List access$100(a2dp.Vol.AppChooser)>($r4) in <a2dp.Vol.AppChooser$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.AppChooser: java.util.List access$100(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.AppChooser$5: void <init>(a2dp.Vol.AppChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.AppChooser$1: void <init>(a2dp.Vol.AppChooser)>($r0) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser$1: void <init>(a2dp.Vol.AppChooser)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.AppChooser$1: void onClick(android.view.View)>(null) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser$1: void onClick(android.view.View)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.AppChooser$1: void <init>(a2dp.Vol.AppChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.AppChooser: void <init>()>() in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.AppChooser: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.AppChooser: void onConfigurationChanged(android.content.res.Configuration)>(null) in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser: void onConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.AppChooser: void onPause()>() in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<a2dp.Vol.AppChooser: void onDestroy()>() in <dummyMainClass: a2dp.Vol.AppChooser dummyMainMethod_a2dp_Vol_AppChooser(android.content.Intent)> ==> <a2dp.Vol.AppChooser: void onDestroy()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.AppChooser: void initAttachViewsToVars()>() in <a2dp.Vol.AppChooser: void onConfigurationChanged(android.content.res.Configuration)> ==> <a2dp.Vol.AppChooser: void initAttachViewsToVars()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.AppChooser: void initAssignListenersAndAdapter()>() in <a2dp.Vol.AppChooser: void onConfigurationChanged(android.content.res.Configuration)> ==> <a2dp.Vol.AppChooser: void initAssignListenersAndAdapter()>
SPECIAL edge: specialinvoke r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5) in <a2dp.Vol.AppChooser: void onCreate(android.os.Bundle)> ==> <java.lang.Thread: void <init>(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke r2.<java.lang.Thread: void start()>() in <a2dp.Vol.AppChooser: void onCreate(android.os.Bundle)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke r2.<java.lang.Thread: void start()>() in <a2dp.Vol.AppChooser: void onCreate(android.os.Bundle)> ==> <java.lang.Thread: void run()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.AppChooser: void initAttachViewsToVars()>() in <a2dp.Vol.AppChooser: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.AppChooser: void initAttachViewsToVars()>
SPECIAL edge: specialinvoke $r7.<a2dp.Vol.AppChooser$7: void <init>(a2dp.Vol.AppChooser)>(r0) in <a2dp.Vol.AppChooser: void <init>()> ==> <a2dp.Vol.AppChooser$7: void <init>(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.AppChooser$7: void <init>(a2dp.Vol.AppChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r6.<a2dp.Vol.AppChooser$6: void <init>(a2dp.Vol.AppChooser)>(r0) in <a2dp.Vol.AppChooser: void <init>()> ==> <a2dp.Vol.AppChooser$6: void <init>(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.AppChooser$6: void <init>(a2dp.Vol.AppChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<a2dp.Vol.AppChooser$5: void <init>(a2dp.Vol.AppChooser)>(r0) in <a2dp.Vol.AppChooser: void <init>()> ==> <a2dp.Vol.AppChooser$5: void <init>(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke $r4.<a2dp.Vol.AppChooser$4: void <init>(a2dp.Vol.AppChooser)>(r0) in <a2dp.Vol.AppChooser: void <init>()> ==> <a2dp.Vol.AppChooser$4: void <init>(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke $r3.<a2dp.Vol.AppChooser$3: void <init>(a2dp.Vol.AppChooser)>(r0) in <a2dp.Vol.AppChooser: void <init>()> ==> <a2dp.Vol.AppChooser$3: void <init>(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.AppChooser$2: void <init>(a2dp.Vol.AppChooser)>(r0) in <a2dp.Vol.AppChooser: void <init>()> ==> <a2dp.Vol.AppChooser$2: void <init>(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke $r1.<a2dp.Vol.AppChooser$1: void <init>(a2dp.Vol.AppChooser)>(r0) in <a2dp.Vol.AppChooser: void <init>()> ==> <a2dp.Vol.AppChooser$1: void <init>(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke $r1.<a2dp.Vol.MyApplication: void <init>()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <a2dp.Vol.MyApplication: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<a2dp.Vol.MyApplication: void onCreate()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <a2dp.Vol.MyApplication: void onCreate()>
VIRTUAL edge: virtualinvoke $r1.<a2dp.Vol.MyApplication: void onTerminate()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <a2dp.Vol.MyApplication: void onTerminate()>
VIRTUAL edge: virtualinvoke r1.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.MyApplication: void onCreate()> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.DeviceDB: void <init>(android.content.Context)>(r0) in <a2dp.Vol.MyApplication: void onCreate()> ==> <a2dp.Vol.DeviceDB: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.AppChooser: void doListFilter()>() in <a2dp.Vol.AppChooser$1: void onClick(android.view.View)> ==> <a2dp.Vol.AppChooser: void doListFilter()>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.AppChooser: void setResult(int,android.content.Intent)>($i0, r3) in <a2dp.Vol.AppChooser$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.AppChooser: void setResult(int,android.content.Intent)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.AppChooser: void doListFilter()>() in <a2dp.Vol.AppChooser$3: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)> ==> <a2dp.Vol.AppChooser: void doListFilter()>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.AppChooser: void doListFilter()>() in <a2dp.Vol.AppChooser$2: void onClick(android.view.View)> ==> <a2dp.Vol.AppChooser: void doListFilter()>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.AppChooser: void doListFilter()>() in <a2dp.Vol.AppChooser$4: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <a2dp.Vol.AppChooser: void doListFilter()>
VIRTUAL edge: $r7 = virtualinvoke $r6.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>($r4) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: virtualinvoke $r6.<a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)>(r1) in <a2dp.Vol.main: int getBtDevices(int)> ==> <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)>
VIRTUAL edge: virtualinvoke r2.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getDefVol()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getDefVol()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long islSetV()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long islSetV()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long islGetLoc()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long islGetLoc()>
VIRTUAL edge: r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getPname()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getPname()>
VIRTUAL edge: r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getBdevice()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getBdevice()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long islWifi()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long islWifi()>
VIRTUAL edge: r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getAppaction()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getAppaction()>
VIRTUAL edge: r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getAppdata()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getAppdata()>
VIRTUAL edge: r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getApptype()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getApptype()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lApprestart()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lApprestart()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long islEnableTTS()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long islEnableTTS()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long islSetpv()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long islSetpv()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getPhonev()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getPhonev()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lAppkill()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lAppkill()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lenablegps()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lenablegps()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getIcon()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getIcon()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getSmsdelay()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getSmsdelay()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getSmsstream()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getSmsstream()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getVoldelay()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getVoldelay()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lVolramp()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lVolramp()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lautovol()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lautovol()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lsilent()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lsilent()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lsleep()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lsleep()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lcarmode()>() in <a2dp.Vol.DeviceDB: long insert(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lcarmode()>
VIRTUAL edge: $z0 = virtualinvoke r0.<a2dp.Vol.btDevice: boolean isVolramp()>() in <a2dp.Vol.btDevice: long lVolramp()> ==> <a2dp.Vol.btDevice: boolean isVolramp()>
VIRTUAL edge: $z0 = virtualinvoke r0.<a2dp.Vol.btDevice: boolean isSetpv()>() in <a2dp.Vol.btDevice: long islSetpv()> ==> <a2dp.Vol.btDevice: boolean isSetpv()>
VIRTUAL edge: $z0 = virtualinvoke r0.<a2dp.Vol.btDevice: boolean isSetV()>() in <a2dp.Vol.btDevice: long islSetV()> ==> <a2dp.Vol.btDevice: boolean isSetV()>
VIRTUAL edge: $r2 = virtualinvoke $r4.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.main: void onDestroy()> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.main: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
SPECIAL edge: $r2 = specialinvoke $r0.<a2dp.Vol.main: java.lang.String getBTClassDev(android.bluetooth.BluetoothDevice)>($r1) in <a2dp.Vol.main: java.lang.String access$400(a2dp.Vol.main,android.bluetooth.BluetoothDevice)> ==> <a2dp.Vol.main: java.lang.String getBTClassDev(android.bluetooth.BluetoothDevice)>
VIRTUAL edge: $i0 = virtualinvoke r2.<java.lang.String: int length()>() in <a2dp.Vol.main: java.lang.String getBTClassDev(android.bluetooth.BluetoothDevice)> ==> <java.lang.String: int length()>
VIRTUAL edge: r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0) in <a2dp.Vol.main: java.lang.String getBTClassDev(android.bluetooth.BluetoothDevice)> ==> <java.lang.String: java.lang.String substring(int,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String substring(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $r2 = specialinvoke $r0.<a2dp.Vol.main: java.lang.String getBTClassDevMaj(android.bluetooth.BluetoothDevice)>($r1) in <a2dp.Vol.main: java.lang.String access$500(a2dp.Vol.main,android.bluetooth.BluetoothDevice)> ==> <a2dp.Vol.main: java.lang.String getBTClassDevMaj(android.bluetooth.BluetoothDevice)>
VIRTUAL edge: $i0 = virtualinvoke r2.<java.lang.String: int length()>() in <a2dp.Vol.main: java.lang.String getBTClassDevMaj(android.bluetooth.BluetoothDevice)> ==> <java.lang.String: int length()>
VIRTUAL edge: r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0) in <a2dp.Vol.main: java.lang.String getBTClassDevMaj(android.bluetooth.BluetoothDevice)> ==> <java.lang.String: java.lang.String substring(int,int)>
SPECIAL edge: $r2 = specialinvoke $r0.<a2dp.Vol.main: java.lang.String getBTClassServ(android.bluetooth.BluetoothDevice)>($r1) in <a2dp.Vol.main: java.lang.String access$600(a2dp.Vol.main,android.bluetooth.BluetoothDevice)> ==> <a2dp.Vol.main: java.lang.String getBTClassServ(android.bluetooth.BluetoothDevice)>
VIRTUAL edge: $i0 = virtualinvoke r2.<java.lang.String: int length()>() in <a2dp.Vol.main: java.lang.String getBTClassServ(android.bluetooth.BluetoothDevice)> ==> <java.lang.String: int length()>
VIRTUAL edge: r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0) in <a2dp.Vol.main: java.lang.String getBTClassServ(android.bluetooth.BluetoothDevice)> ==> <java.lang.String: java.lang.String substring(int,int)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.main: void Locationbtn()>() in <a2dp.Vol.main$6: void onClick(android.view.View)> ==> <a2dp.Vol.main: void Locationbtn()>
CLINIT edge: $r10 = new java.lang.String in <a2dp.Vol.main: void Locationbtn()> ==> <java.lang.String: void <clinit>()>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>() in <a2dp.Vol.main: void Locationbtn()> ==> <java.lang.String: java.lang.String trim()>
SPECIAL edge: specialinvoke $r10.<java.lang.String: void <init>(byte[])>(r1) in <a2dp.Vol.main: void Locationbtn()> ==> <java.lang.String: void <init>(byte[])>
VIRTUAL edge: $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "_") in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
SPECIAL edge: $i0 = specialinvoke $r0.<a2dp.Vol.main: int getBtDevices(int)>($i0) in <a2dp.Vol.main: int access$300(a2dp.Vol.main,int)> ==> <a2dp.Vol.main: int getBtDevices(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.DeviceDB: void delete(a2dp.Vol.btDevice)>($r5) in <a2dp.Vol.main$5$1: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.DeviceDB: void delete(a2dp.Vol.btDevice)>
VIRTUAL edge: $r10 = virtualinvoke $r8.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>($r9) in <a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.DeviceDB: void deleteAll()>() in <a2dp.Vol.main$2: void onClick(android.content.DialogInterface,int)> ==> <a2dp.Vol.DeviceDB: void deleteAll()>
SPECIAL edge: $i0 = specialinvoke $r0.<a2dp.Vol.main: int loadFromDB()>() in <a2dp.Vol.main: int access$100(a2dp.Vol.main)> ==> <a2dp.Vol.main: int loadFromDB()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.main: void refreshList(int)>($i0) in <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)> ==> <a2dp.Vol.main: void refreshList(int)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<a2dp.Vol.MyApplication: a2dp.Vol.DeviceDB getDeviceDB()>() in <a2dp.Vol.ManageData$SelectDataTask: java.lang.String doInBackground(java.lang.String[])> ==> <a2dp.Vol.MyApplication: a2dp.Vol.DeviceDB getDeviceDB()>
VIRTUAL edge: $r6 = virtualinvoke $r5.<a2dp.Vol.DeviceDB: java.util.List selectAll()>() in <a2dp.Vol.ManageData$SelectDataTask: java.lang.String doInBackground(java.lang.String[])> ==> <a2dp.Vol.DeviceDB: java.util.List selectAll()>
VIRTUAL edge: $r8 = virtualinvoke $r7.<a2dp.Vol.MyApplication: a2dp.Vol.DeviceDB getDeviceDB()>() in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.MyApplication: a2dp.Vol.DeviceDB getDeviceDB()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
VIRTUAL edge: $r8 = virtualinvoke $r7.<a2dp.Vol.MyApplication: a2dp.Vol.DeviceDB getDeviceDB()>() in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.MyApplication: a2dp.Vol.DeviceDB getDeviceDB()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
VIRTUAL edge: $r8 = virtualinvoke $r7.<a2dp.Vol.MyApplication: a2dp.Vol.DeviceDB getDeviceDB()>() in <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])> ==> <a2dp.Vol.MyApplication: a2dp.Vol.DeviceDB getDeviceDB()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
SPECIAL edge: $z0 = specialinvoke $r0.<a2dp.Vol.ManageData: boolean isExternalStorageAvail()>() in <a2dp.Vol.ManageData: boolean access$100(a2dp.Vol.ManageData)> ==> <a2dp.Vol.ManageData: boolean isExternalStorageAvail()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.StoreLoc: void onDestroy()> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.StoreLoc: void finalize()> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>($r6) in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.StoreLoc: void grabGPS()>() in <a2dp.Vol.StoreLoc$2: void onLocationChanged(android.location.Location)> ==> <a2dp.Vol.StoreLoc: void grabGPS()>
VIRTUAL edge: $r15 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>() in <a2dp.Vol.StoreLoc: void grabGPS()> ==> <java.lang.String: byte[] getBytes()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.StoreLoc: void clearLoc(boolean)>(1) in <a2dp.Vol.StoreLoc: void grabGPS()> ==> <a2dp.Vol.StoreLoc: void clearLoc(boolean)>
VIRTUAL edge: virtualinvoke r22.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r20.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r16.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r8 = virtualinvoke r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "_") in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
VIRTUAL edge: $r15 = virtualinvoke r6.<java.lang.String: byte[] getBytes()>() in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <java.lang.String: byte[] getBytes()>
VIRTUAL edge: $l1 = virtualinvoke $r19.<java.lang.Long: long longValue()>() in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <java.lang.Long: long longValue()>
VIRTUAL edge: r6 = virtualinvoke $r7.<a2dp.Vol.btDevice: java.lang.String getDesc2()>() in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <a2dp.Vol.btDevice: java.lang.String getDesc2()>
VIRTUAL edge: r2 = virtualinvoke $r10.<a2dp.Vol.btDevice: java.lang.String getDesc2()>() in <a2dp.Vol.StoreLoc: void grabGPS()> ==> <a2dp.Vol.btDevice: java.lang.String getDesc2()>
VIRTUAL edge: $l5 = virtualinvoke $r8.<java.lang.Long: long longValue()>() in <a2dp.Vol.StoreLoc: void grabGPS()> ==> <java.lang.Long: long longValue()>
VIRTUAL edge: $r6 = virtualinvoke $r5.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.service: void onDestroy()> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.CustomIntentMaker: void setResult(int,android.content.Intent)>($i0, $r3) in <a2dp.Vol.CustomIntentMaker$1: void onClick(android.view.View)> ==> <a2dp.Vol.CustomIntentMaker: void setResult(int,android.content.Intent)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.EditDevice: void closedb()> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
VIRTUAL edge: virtualinvoke $r14.<a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)>($r4) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)>
STATIC edge: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <java.lang.Long: void <clinit>()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getDesc2()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getDesc2()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getDefVol()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getDefVol()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long islSetV()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long islSetV()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long islGetLoc()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long islGetLoc()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getPname()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getPname()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getBdevice()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getBdevice()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long islWifi()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long islWifi()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getAppaction()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getAppaction()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getAppdata()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getAppdata()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getApptype()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getApptype()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lApprestart()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lApprestart()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long islEnableTTS()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long islEnableTTS()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long islSetpv()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long islSetpv()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getPhonev()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getPhonev()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lAppkill()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lAppkill()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lenablegps()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lenablegps()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getIcon()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getIcon()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getSmsdelay()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getSmsdelay()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getSmsstream()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getSmsstream()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getVoldelay()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getVoldelay()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lVolramp()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lVolramp()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lautovol()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lautovol()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<a2dp.Vol.btDevice: long lsilent()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: long lsilent()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isSleep()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isSleep()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isCarmode()>() in <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isCarmode()>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setDesc2(java.lang.String)>($r6) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setDesc2(java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setSetV(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setSetV(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setDefVol(int)>($i0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setDefVol(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setGetLoc(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setGetLoc(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setPname(java.lang.String)>($r6) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setPname(java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setBdevice(java.lang.String)>($r6) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setBdevice(java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setWifi(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setWifi(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setAppaction(java.lang.String)>($r6) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setAppaction(java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setAppdata(java.lang.String)>($r6) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setAppdata(java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setApptype(java.lang.String)>($r6) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setApptype(java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setApprestart(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setApprestart(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setAppkill(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setAppkill(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setEnableTTS(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setEnableTTS(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setSetpv(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setSetpv(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setPhonev(int)>($i0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setPhonev(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setSmsdelay(int)>($i0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setSmsdelay(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setVoldelay(int)>($i0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setVoldelay(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setVolramp(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setVolramp(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setAutovol(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setAutovol(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setSilent(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setSilent(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setSleep(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setSleep(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setCarmode(boolean)>($z0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setCarmode(boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setIcon(int)>(2130837504) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setIcon(int)>(2130837505) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setIcon(int)>(2130837508) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setIcon(int)>(2130837509) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setIcon(int)>(2130837507) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setIcon(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setSmsstream(int)>(0) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setSmsstream(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setSmsstream(int)>(1) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setSmsstream(int)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.btDevice: void setSmsstream(int)>(2) in <a2dp.Vol.EditDevice: void Save()> ==> <a2dp.Vol.btDevice: void setSmsstream(int)>
VIRTUAL edge: virtualinvoke $r1.<a2dp.Vol.btDevice: void setAppaction(java.lang.String)>($r2) in <a2dp.Vol.EditDevice: void vUpdateApp()> ==> <a2dp.Vol.btDevice: void setAppaction(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<a2dp.Vol.btDevice: void setAppdata(java.lang.String)>($r2) in <a2dp.Vol.EditDevice: void vUpdateApp()> ==> <a2dp.Vol.btDevice: void setAppdata(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<a2dp.Vol.btDevice: void setApptype(java.lang.String)>($r2) in <a2dp.Vol.EditDevice: void vUpdateApp()> ==> <a2dp.Vol.btDevice: void setApptype(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<a2dp.Vol.btDevice: void setPname(java.lang.String)>($r2) in <a2dp.Vol.EditDevice: void vUpdateApp()> ==> <a2dp.Vol.btDevice: void setPname(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean hasIntent()>() in <a2dp.Vol.EditDevice: void vUpdateApp()> ==> <a2dp.Vol.btDevice: boolean hasIntent()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<java.lang.String: int length()>() in <a2dp.Vol.btDevice: boolean hasIntent()> ==> <java.lang.String: int length()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Custom") in <a2dp.Vol.btDevice: boolean hasIntent()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.EditDevice: void Save()>() in <a2dp.Vol.EditDevice: void access$300(a2dp.Vol.EditDevice)> ==> <a2dp.Vol.EditDevice: void Save()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.EditDevice: void vUpdateApp()>() in <a2dp.Vol.EditDevice: void access$1700(a2dp.Vol.EditDevice)> ==> <a2dp.Vol.EditDevice: void vUpdateApp()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.EditDevice: void setInCallVisibility()>() in <a2dp.Vol.EditDevice: void access$200(a2dp.Vol.EditDevice)> ==> <a2dp.Vol.EditDevice: void setInCallVisibility()>
VIRTUAL edge: $r6 = virtualinvoke $r5.<a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>() in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <a2dp.Vol.DeviceDB: android.database.sqlite.SQLiteDatabase getDb()>
VIRTUAL edge: $r9 = virtualinvoke $r5.<a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()>() in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <a2dp.Vol.DeviceDB: java.util.Vector selectAlldb()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.EditDevice: void closedb()>() in <a2dp.Vol.EditDevice: void access$400(a2dp.Vol.EditDevice)> ==> <a2dp.Vol.EditDevice: void closedb()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.EditDevice: void setMediaVisibility()>() in <a2dp.Vol.EditDevice: void access$100(a2dp.Vol.EditDevice)> ==> <a2dp.Vol.EditDevice: void setMediaVisibility()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.EditDevice: void setTTSVisibility()>() in <a2dp.Vol.EditDevice: void access$000(a2dp.Vol.EditDevice)> ==> <a2dp.Vol.EditDevice: void setTTSVisibility()>
INTERFACE edge: interfaceinvoke target.<java.lang.Runnable: void run()>() in <java.lang.Thread: void run()> ==> <a2dp.Vol.AppChooser$6: void run()>
INTERFACE edge: interfaceinvoke target.<java.lang.Runnable: void run()>() in <java.lang.Thread: void run()> ==> <a2dp.Vol.PackagesChooser$1: void run()>
STATIC edge: $r19 = staticinvoke <a2dp.Vol.AppChooser: java.lang.Runnable access$500(a2dp.Vol.AppChooser)>($r3) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser: java.lang.Runnable access$500(a2dp.Vol.AppChooser)>
STATIC edge: $r18 = staticinvoke <a2dp.Vol.AppChooser: android.os.Handler access$600(a2dp.Vol.AppChooser)>($r3) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser: android.os.Handler access$600(a2dp.Vol.AppChooser)>
STATIC edge: staticinvoke <a2dp.Vol.AppChooser: a2dp.Vol.AppChooser$PackageListAdapter access$402(a2dp.Vol.AppChooser,a2dp.Vol.AppChooser$PackageListAdapter)>($r3, $r15) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser: a2dp.Vol.AppChooser$PackageListAdapter access$402(a2dp.Vol.AppChooser,a2dp.Vol.AppChooser$PackageListAdapter)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.AppChooser: java.util.List access$300(a2dp.Vol.AppChooser)>($r3) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser: java.util.List access$300(a2dp.Vol.AppChooser)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.AppChooser: java.util.List access$100(a2dp.Vol.AppChooser)>($r3) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser: java.util.List access$100(a2dp.Vol.AppChooser)>
STATIC edge: staticinvoke <a2dp.Vol.AppChooser: java.util.List access$302(a2dp.Vol.AppChooser,java.util.List)>($r3, $r4) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser: java.util.List access$302(a2dp.Vol.AppChooser,java.util.List)>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.AppChooser: android.content.pm.PackageManager access$200(a2dp.Vol.AppChooser)>($r10) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser: android.content.pm.PackageManager access$200(a2dp.Vol.AppChooser)>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.AppChooser: android.content.pm.PackageManager access$200(a2dp.Vol.AppChooser)>($r3) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser: android.content.pm.PackageManager access$200(a2dp.Vol.AppChooser)>
STATIC edge: staticinvoke <a2dp.Vol.AppChooser: java.util.List access$102(a2dp.Vol.AppChooser,java.util.List)>($r3, $r4) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser: java.util.List access$102(a2dp.Vol.AppChooser,java.util.List)>
STATIC edge: $r20 = staticinvoke <a2dp.Vol.PackagesChooser: java.lang.Runnable access$500(a2dp.Vol.PackagesChooser)>($r3) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser: java.lang.Runnable access$500(a2dp.Vol.PackagesChooser)>
STATIC edge: $r19 = staticinvoke <a2dp.Vol.PackagesChooser: android.os.Handler access$600(a2dp.Vol.PackagesChooser)>($r3) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser: android.os.Handler access$600(a2dp.Vol.PackagesChooser)>
STATIC edge: staticinvoke <a2dp.Vol.PackagesChooser: a2dp.Vol.PackagesChooser$PackageListAdapter access$402(a2dp.Vol.PackagesChooser,a2dp.Vol.PackagesChooser$PackageListAdapter)>($r3, $r16) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser: a2dp.Vol.PackagesChooser$PackageListAdapter access$402(a2dp.Vol.PackagesChooser,a2dp.Vol.PackagesChooser$PackageListAdapter)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.PackagesChooser: java.util.List access$200(a2dp.Vol.PackagesChooser)>($r3) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser: java.util.List access$200(a2dp.Vol.PackagesChooser)>
STATIC edge: $r15 = staticinvoke <a2dp.Vol.PackagesChooser: java.lang.String[] access$300(a2dp.Vol.PackagesChooser)>($r3) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser: java.lang.String[] access$300(a2dp.Vol.PackagesChooser)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.PackagesChooser: java.util.List access$000(a2dp.Vol.PackagesChooser)>($r3) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser: java.util.List access$000(a2dp.Vol.PackagesChooser)>
STATIC edge: staticinvoke <a2dp.Vol.PackagesChooser: java.util.List access$202(a2dp.Vol.PackagesChooser,java.util.List)>($r3, $r4) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser: java.util.List access$202(a2dp.Vol.PackagesChooser,java.util.List)>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.PackagesChooser: android.content.pm.PackageManager access$100(a2dp.Vol.PackagesChooser)>($r10) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser: android.content.pm.PackageManager access$100(a2dp.Vol.PackagesChooser)>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.PackagesChooser: android.content.pm.PackageManager access$100(a2dp.Vol.PackagesChooser)>($r3) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser: android.content.pm.PackageManager access$100(a2dp.Vol.PackagesChooser)>
STATIC edge: staticinvoke <a2dp.Vol.PackagesChooser: java.util.List access$002(a2dp.Vol.PackagesChooser,java.util.List)>($r3, $r4) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser: java.util.List access$002(a2dp.Vol.PackagesChooser,java.util.List)>
SPECIAL edge: specialinvoke $r16.<a2dp.Vol.PackagesChooser$PackageListAdapter: void <init>(a2dp.Vol.PackagesChooser,android.content.Context)>($r10, $r18) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser$PackageListAdapter: void <init>(a2dp.Vol.PackagesChooser,android.content.Context)>
STATIC edge: $r3 = staticinvoke <a2dp.Vol.PackagesChooser: java.util.List access$000(a2dp.Vol.PackagesChooser)>($r1) in <a2dp.Vol.PackagesChooser$PackageListAdapter: void <init>(a2dp.Vol.PackagesChooser,android.content.Context)> ==> <a2dp.Vol.PackagesChooser: java.util.List access$000(a2dp.Vol.PackagesChooser)>
SPECIAL edge: specialinvoke $r14.<a2dp.Vol.PackagesChooser$AlphaComparator: void <init>(a2dp.Vol.PackagesChooser)>($r3) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser$AlphaComparator: void <init>(a2dp.Vol.PackagesChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.PackagesChooser$AlphaComparator: void <init>(a2dp.Vol.PackagesChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r1.<a2dp.Vol.PackagesChooser$AppInfoCache: void <init>(a2dp.Vol.PackagesChooser,java.lang.String,java.lang.String,java.lang.String)>($r3, $r12, $r13, $r2) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: void <init>(a2dp.Vol.PackagesChooser,java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.PackagesChooser$AppInfoCache: void setPosition(int)>(i0) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: void setPosition(int)>
VIRTUAL edge: $r2 = virtualinvoke r1.<a2dp.Vol.PackagesChooser$AppInfoCache: java.lang.String getPackageName()>() in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: java.lang.String getPackageName()>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.PackagesChooser$AppInfoCache: void setChecked(boolean)>($z0) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: void setChecked(boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.PackagesChooser$AppInfoCache: void <init>(a2dp.Vol.PackagesChooser,java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.PackagesChooser$AppInfoCache: void setChecked(boolean)>(0) in <a2dp.Vol.PackagesChooser$AppInfoCache: void <init>(a2dp.Vol.PackagesChooser,java.lang.String,java.lang.String,java.lang.String)> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: void setChecked(boolean)>
VIRTUAL edge: virtualinvoke $r19.<android.os.Handler: boolean post(java.lang.Runnable)>($r20) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
EXECUTOR edge: virtualinvoke $r19.<android.os.Handler: boolean post(java.lang.Runnable)>($r20) in <a2dp.Vol.PackagesChooser$1: void run()> ==> <a2dp.Vol.PackagesChooser$2: void run()>
STATIC edge: $r1 = staticinvoke <a2dp.Vol.PackagesChooser: android.widget.ProgressBar access$800(a2dp.Vol.PackagesChooser)>($r2) in <a2dp.Vol.PackagesChooser$2: void run()> ==> <a2dp.Vol.PackagesChooser: android.widget.ProgressBar access$800(a2dp.Vol.PackagesChooser)>
STATIC edge: staticinvoke <a2dp.Vol.PackagesChooser: void access$700(a2dp.Vol.PackagesChooser)>($r2) in <a2dp.Vol.PackagesChooser$2: void run()> ==> <a2dp.Vol.PackagesChooser: void access$700(a2dp.Vol.PackagesChooser)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.PackagesChooser: void initAssignListenersAndAdapter()>() in <a2dp.Vol.PackagesChooser: void access$700(a2dp.Vol.PackagesChooser)> ==> <a2dp.Vol.PackagesChooser: void initAssignListenersAndAdapter()>
INTERFACE edge: interfaceinvoke param0.<java.lang.Runnable: void run()>() in <android.os.Handler: boolean post(java.lang.Runnable)> ==> <a2dp.Vol.PackagesChooser$2: void run()>
SPECIAL edge: specialinvoke $r15.<a2dp.Vol.AppChooser$PackageListAdapter: void <init>(a2dp.Vol.AppChooser,android.content.Context)>($r10, $r17) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser$PackageListAdapter: void <init>(a2dp.Vol.AppChooser,android.content.Context)>
STATIC edge: $r3 = staticinvoke <a2dp.Vol.AppChooser: java.util.List access$100(a2dp.Vol.AppChooser)>($r1) in <a2dp.Vol.AppChooser$PackageListAdapter: void <init>(a2dp.Vol.AppChooser,android.content.Context)> ==> <a2dp.Vol.AppChooser: java.util.List access$100(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke $r14.<a2dp.Vol.AppChooser$AlphaComparator: void <init>(a2dp.Vol.AppChooser)>($r3) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser$AlphaComparator: void <init>(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.AppChooser$AlphaComparator: void <init>(a2dp.Vol.AppChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r1.<a2dp.Vol.AppChooser$AppInfoCache: void <init>(a2dp.Vol.AppChooser,java.lang.String,java.lang.String,java.lang.String)>($r3, $r12, $r13, $r2) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser$AppInfoCache: void <init>(a2dp.Vol.AppChooser,java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<a2dp.Vol.AppChooser$AppInfoCache: void setPosition(int)>(i0) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser$AppInfoCache: void setPosition(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.AppChooser$AppInfoCache: void <init>(a2dp.Vol.AppChooser,java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r18.<android.os.Handler: boolean post(java.lang.Runnable)>($r19) in <a2dp.Vol.AppChooser$6: void run()> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
EXECUTOR edge: virtualinvoke $r18.<android.os.Handler: boolean post(java.lang.Runnable)>($r19) in <a2dp.Vol.AppChooser$6: void run()> ==> <a2dp.Vol.AppChooser$7: void run()>
STATIC edge: $r1 = staticinvoke <a2dp.Vol.AppChooser: android.app.ProgressDialog access$800(a2dp.Vol.AppChooser)>($r2) in <a2dp.Vol.AppChooser$7: void run()> ==> <a2dp.Vol.AppChooser: android.app.ProgressDialog access$800(a2dp.Vol.AppChooser)>
STATIC edge: staticinvoke <a2dp.Vol.AppChooser: void access$700(a2dp.Vol.AppChooser)>($r2) in <a2dp.Vol.AppChooser$7: void run()> ==> <a2dp.Vol.AppChooser: void access$700(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.AppChooser: void initAssignListenersAndAdapter()>() in <a2dp.Vol.AppChooser: void access$700(a2dp.Vol.AppChooser)> ==> <a2dp.Vol.AppChooser: void initAssignListenersAndAdapter()>
INTERFACE edge: interfaceinvoke param0.<java.lang.Runnable: void run()>() in <android.os.Handler: boolean post(java.lang.Runnable)> ==> <a2dp.Vol.AppChooser$7: void run()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R$xml: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted") in <a2dp.Vol.ManageData: boolean isExternalStorageAvail()> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r9.<a2dp.Vol.ManageData$SelectDataTask: android.os.AsyncTask execute(java.lang.Object[])>($r10) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$SelectDataTask: void onPostExecute(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r9.<a2dp.Vol.ManageData$SelectDataTask: android.os.AsyncTask execute(java.lang.Object[])>($r10) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$SelectDataTask: void onPreExecute()>
VIRTUAL edge: virtualinvoke $r9.<a2dp.Vol.ManageData$SelectDataTask: android.os.AsyncTask execute(java.lang.Object[])>($r10) in <a2dp.Vol.ManageData: void onCreate(android.os.Bundle)> ==> <a2dp.Vol.ManageData$SelectDataTask: java.lang.Object doInBackground(java.lang.Object[])>
VIRTUAL edge: $r8 = virtualinvoke $r7.<a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getPackageName()>() in <a2dp.Vol.AppChooser$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getPackageName()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.StoreLoc: void clearLoc(boolean)>($z0) in <a2dp.Vol.StoreLoc: void access$200(a2dp.Vol.StoreLoc,boolean)> ==> <a2dp.Vol.StoreLoc: void clearLoc(boolean)>
VIRTUAL edge: virtualinvoke $r27.<java.io.FileNotFoundException: void printStackTrace()>() in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: r6 = virtualinvoke $r27.<java.io.FileNotFoundException: java.lang.String getMessage()>() in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke $r28.<java.io.IOException: void printStackTrace()>() in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: r6 = virtualinvoke $r28.<java.io.IOException: java.lang.String getMessage()>() in <a2dp.Vol.StoreLoc: void clearLoc(boolean)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r15 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>() in <a2dp.Vol.StoreLoc: void grabGPS()> ==> <java.lang.String: byte[] getBytes()>
VIRTUAL edge: virtualinvoke $r26.<java.io.FileNotFoundException: void printStackTrace()>() in <a2dp.Vol.StoreLoc: void grabGPS()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r27.<java.io.UnsupportedEncodingException: void printStackTrace()>() in <a2dp.Vol.StoreLoc: void grabGPS()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r28.<java.io.IOException: void printStackTrace()>() in <a2dp.Vol.StoreLoc: void grabGPS()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r6 = virtualinvoke $r20.<java.lang.NumberFormatException: java.lang.String getMessage()>() in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke $r20.<java.lang.NumberFormatException: void printStackTrace()>() in <a2dp.Vol.StoreLoc: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r10 = virtualinvoke $r13.<java.io.IOException: java.lang.String getMessage()>() in <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Throwable: java.lang.String getMessage()>
STATIC edge: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.service: java.lang.String GetName(java.lang.String)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <a2dp.Vol.service: java.lang.String GetName(java.lang.String)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.service: void clearTts()>() in <a2dp.Vol.service: void access$000(a2dp.Vol.service)> ==> <a2dp.Vol.service: void clearTts()>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.service: void getConnects()>() in <a2dp.Vol.service: void access$100(a2dp.Vol.service)> ==> <a2dp.Vol.service: void getConnects()>
SPECIAL edge: $r1 = specialinvoke $r0.<a2dp.Vol.service: java.lang.String GetName(java.lang.String)>($r1) in <a2dp.Vol.service: java.lang.String access$1800(a2dp.Vol.service,java.lang.String)> ==> <a2dp.Vol.service: java.lang.String GetName(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.service: void updateNot(boolean,java.lang.String)>($z0, $r1) in <a2dp.Vol.service: void access$300(a2dp.Vol.service,boolean,java.lang.String)> ==> <a2dp.Vol.service: void updateNot(boolean,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.service: void dowifi(boolean)>($z0) in <a2dp.Vol.service: void access$900(a2dp.Vol.service,boolean)> ==> <a2dp.Vol.service: void dowifi(boolean)>
VIRTUAL edge: $r5 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>() in <a2dp.Vol.service: void dowifi(boolean)> ==> <java.lang.Throwable: java.lang.String toString()>
VIRTUAL edge: virtualinvoke r1.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: void dowifi(boolean)> ==> <java.lang.Throwable: void printStackTrace()>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <a2dp.Vol.service: void getConnects()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <a2dp.Vol.service: void getConnects()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<a2dp.Vol.btDevice: boolean isSetV()>() in <a2dp.Vol.service: void getConnects()> ==> <a2dp.Vol.btDevice: boolean isSetV()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<a2dp.Vol.btDevice: boolean isSetpv()>() in <a2dp.Vol.service: void getConnects()> ==> <a2dp.Vol.btDevice: boolean isSetpv()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <a2dp.Vol.service: void getOldPvol()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <a2dp.Vol.service: void getOldvol()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getPname()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getPname()>
VIRTUAL edge: $r4 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getAppaction()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getAppaction()>
VIRTUAL edge: $r5 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getAppdata()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getAppdata()>
VIRTUAL edge: $r6 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getApptype()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getApptype()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isApprestart()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isApprestart()>
VIRTUAL edge: $i0 = virtualinvoke $r3.<java.lang.String: int length()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.String: int length()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("") in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: virtualinvoke r9.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $i0 = virtualinvoke $r5.<java.lang.String: int length()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.String: int length()>
VIRTUAL edge: virtualinvoke $r19.<java.net.URISyntaxException: void printStackTrace()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("") in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("") in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("") in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: virtualinvoke r14.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r2.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r15.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r2.<a2dp.Vol.service$10: void <init>(long,long,int)>($l3, 1000L, $i0) in <a2dp.Vol.service: void setVolume(int,android.content.Context)> ==> <a2dp.Vol.service$10: void <init>(long,long,int)>
VIRTUAL edge: $r4 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.service: void set_car_mode(boolean)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke r1.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: void set_car_mode(boolean)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r1 = virtualinvoke $r12.<a2dp.Vol.btDevice: java.lang.String toString()>() in <a2dp.Vol.service: void updateNot(boolean,java.lang.String)> ==> <a2dp.Vol.btDevice: java.lang.String toString()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("always") in <a2dp.Vol.service: void updateNot(boolean,java.lang.String)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
VIRTUAL edge: $r8 = virtualinvoke $r6.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
VIRTUAL edge: $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8) in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void getConnects()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void getConnects()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void getOldvol()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void getOldvol()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void getOldPvol()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void getOldPvol()>
VIRTUAL edge: i2 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getIcon()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getIcon()>
VIRTUAL edge: i2 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getSmsstream()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getSmsstream()>
VIRTUAL edge: i2 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getVoldelay()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getVoldelay()>
VIRTUAL edge: i2 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getSmsdelay()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getSmsdelay()>
VIRTUAL edge: z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isVolramp()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isVolramp()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void dowifi(boolean)>(0) in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void dowifi(boolean)>
VIRTUAL edge: $r7 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getBdevice()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getBdevice()>
VIRTUAL edge: i2 = virtualinvoke $r7.<java.lang.String: int length()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <java.lang.String: int length()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.service: void getIBluetoothA2dp(android.content.Context)>($r12) in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void getIBluetoothA2dp(android.content.Context)>
VIRTUAL edge: $r7 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String toString()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String toString()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void updateNot(boolean,java.lang.String)>(1, $r7) in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void updateNot(boolean,java.lang.String)>
VIRTUAL edge: z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean hasIntent()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean hasIntent()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)>($r1) in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: boolean runApp(a2dp.Vol.btDevice)>
VIRTUAL edge: z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isEnableTTS()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isEnableTTS()>
VIRTUAL edge: z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isSetpv()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isSetpv()>
VIRTUAL edge: i2 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getPhonev()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getPhonev()>
SPECIAL edge: specialinvoke $r18.<a2dp.Vol.service$6: void <init>(a2dp.Vol.service,long,long,int)>(r0, $l0, $l1, i2) in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service$6: void <init>(a2dp.Vol.service,long,long,int)>
VIRTUAL edge: z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isSilent()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isSilent()>
VIRTUAL edge: z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isSetV()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isSetV()>
VIRTUAL edge: i2 = virtualinvoke $r1.<a2dp.Vol.btDevice: int getDefVol()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: int getDefVol()>
SPECIAL edge: specialinvoke $r20.<a2dp.Vol.service$7: void <init>(a2dp.Vol.service,long,long,int)>(r0, $l0, $l1, i2) in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service$7: void <init>(a2dp.Vol.service,long,long,int)>
VIRTUAL edge: z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isCarmode()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isCarmode()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void set_car_mode(boolean)>(1) in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void set_car_mode(boolean)>
VIRTUAL edge: virtualinvoke r2.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r7 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean hasIntent()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean hasIntent()>
VIRTUAL edge: $r6 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getPname()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getPname()>
VIRTUAL edge: $i1 = virtualinvoke $r6.<java.lang.String: int length()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <java.lang.String: int length()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isAppkill()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isAppkill()>
SPECIAL edge: specialinvoke r2.<a2dp.Vol.service$9: void <init>(a2dp.Vol.service,long,long,java.lang.String)>(r0, 3000L, 3000L, $r6) in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service$9: void <init>(a2dp.Vol.service,long,long,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isGetLoc()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isGetLoc()>
VIRTUAL edge: $r6 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void dowifi(boolean)>($z0) in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void dowifi(boolean)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9) in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: virtualinvoke r10.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r11.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void getConnects()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void getConnects()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isSetV()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isSetV()>
STATIC edge: staticinvoke <a2dp.Vol.service: void setVolume(int,android.content.Context)>($i1, $r13) in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void setVolume(int,android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isSetpv()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isSetpv()>
STATIC edge: staticinvoke <a2dp.Vol.service: int setPVolume(int)>($i1) in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: int setPVolume(int)>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void updateNot(boolean,java.lang.String)>(0, null) in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void updateNot(boolean,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isEnableTTS()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isEnableTTS()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void clearTts()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void clearTts()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isSilent()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isSilent()>
VIRTUAL edge: $r6 = virtualinvoke $r1.<a2dp.Vol.btDevice: java.lang.String getBdevice()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: java.lang.String getBdevice()>
STATIC edge: staticinvoke <a2dp.Vol.service: void doUnbind(android.content.Context)>($r13) in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void doUnbind(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isAutovol()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isAutovol()>
VIRTUAL edge: virtualinvoke $r1.<a2dp.Vol.btDevice: void setDefVol(int)>($i0) in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: void setDefVol(int)>
VIRTUAL edge: virtualinvoke $r17.<a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)>($r1) in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.DeviceDB: void update(a2dp.Vol.btDevice)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<a2dp.Vol.btDevice: boolean isCarmode()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.btDevice: boolean isCarmode()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void set_car_mode(boolean)>(0) in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <a2dp.Vol.service: void set_car_mode(boolean)>
VIRTUAL edge: virtualinvoke r18.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r19.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("http.*? ", ", URL, ") in <a2dp.Vol.service: void TextReader(java.lang.String)> ==> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r2.<java.lang.String: int length()>() in <a2dp.Vol.service: void TextReader(java.lang.String)> ==> <java.lang.String: int length()>
VIRTUAL edge: $r1 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0) in <a2dp.Vol.service: void TextReader(java.lang.String)> ==> <java.lang.String: java.lang.String substring(int,int)>
SPECIAL edge: specialinvoke $r10.<a2dp.Vol.service$13: void <init>(a2dp.Vol.service,long,long,java.lang.String)>(r0, $l2, $l3, r2) in <a2dp.Vol.service: void TextReader(java.lang.String)> ==> <a2dp.Vol.service$13: void <init>(a2dp.Vol.service,long,long,java.lang.String)>
VIRTUAL edge: $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>() in <a2dp.Vol.service: void onCreate()> ==> <java.lang.Long: long longValue()>
VIRTUAL edge: $f0 = virtualinvoke $r8.<java.lang.Float: float floatValue()>() in <a2dp.Vol.service: void onCreate()> ==> <java.lang.Float: float floatValue()>
VIRTUAL edge: virtualinvoke $r29.<java.lang.NumberFormatException: void printStackTrace()>() in <a2dp.Vol.service: void onCreate()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r6 = virtualinvoke $r29.<java.lang.NumberFormatException: java.lang.String getMessage()>() in <a2dp.Vol.service: void onCreate()> ==> <java.lang.Throwable: java.lang.String getMessage()>
SPECIAL edge: specialinvoke r0.<a2dp.Vol.service: void updateNot(boolean,java.lang.String)>(0, null) in <a2dp.Vol.service: void onStart()> ==> <a2dp.Vol.service: void updateNot(boolean,java.lang.String)>
VIRTUAL edge: virtualinvoke $r14.<android.content.ActivityNotFoundException: void printStackTrace()>() in <a2dp.Vol.service: void stopApp(java.lang.String)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R$layout: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i0 = virtualinvoke $r6.<java.lang.String: int length()>() in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <java.lang.String: int length()>
VIRTUAL edge: $i0 = virtualinvoke $r7.<java.lang.String: int length()>() in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <java.lang.String: int length()>
VIRTUAL edge: virtualinvoke $r18.<java.net.URISyntaxException: void printStackTrace()>() in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("") in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("") in <a2dp.Vol.CustomIntentMaker$3: void onClick(android.view.View)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r7.<a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getAppName()>() in <a2dp.Vol.AppChooser: void doListFilter()> ==> <a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getAppName()>
VIRTUAL edge: $r10 = virtualinvoke r9.<a2dp.Vol.AppChooser$AppInfoCache: android.graphics.drawable.Drawable getIcon()>() in <a2dp.Vol.AppChooser$PackageListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <a2dp.Vol.AppChooser$AppInfoCache: android.graphics.drawable.Drawable getIcon()>
VIRTUAL edge: $r11 = virtualinvoke r9.<a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getAppName()>() in <a2dp.Vol.AppChooser$PackageListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getAppName()>
STATIC edge: $r1 = staticinvoke <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>() in <a2dp.Vol.service$7: void onFinish()> ==> <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>
STATIC edge: staticinvoke <a2dp.Vol.service: void setVolume(int,android.content.Context)>($i0, $r1) in <a2dp.Vol.service$7: void onFinish()> ==> <a2dp.Vol.service: void setVolume(int,android.content.Context)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$1400(a2dp.Vol.service)>($r4) in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1400(a2dp.Vol.service)>
STATIC edge: staticinvoke <a2dp.Vol.service: boolean access$1402(a2dp.Vol.service,boolean)>($r4, 1) in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1402(a2dp.Vol.service,boolean)>
STATIC edge: $r9 = staticinvoke <a2dp.Vol.service: a2dp.Vol.DeviceDB access$1300(a2dp.Vol.service)>($r4) in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: a2dp.Vol.DeviceDB access$1300(a2dp.Vol.service)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>($r8) in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r10.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
STATIC edge: staticinvoke <a2dp.Vol.service: boolean access$1402(a2dp.Vol.service,boolean)>($r4, 0) in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1402(a2dp.Vol.service,boolean)>
VIRTUAL edge: virtualinvoke r3.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r8 = virtualinvoke r11.<java.lang.Exception: java.lang.String toString()>() in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: java.lang.String toString()>
VIRTUAL edge: $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("android.app.action.EXIT_CAR_MODE") in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>("1") in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("android.app.action.EXIT_DESK_MODE") in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>("2") in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("android.intent.action.ACTION_POWER_DISCONNECTED") in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>("4") in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke r13.<java.lang.Exception: java.lang.String toString()>() in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)>($r10) in <a2dp.Vol.service$8: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.service: void stopApp(java.lang.String)>($r5) in <a2dp.Vol.service$9: void onFinish()> ==> <a2dp.Vol.service: void stopApp(java.lang.String)>
VIRTUAL edge: virtualinvoke r6.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service$9: void onFinish()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke r7.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service$9: void onFinish()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r5 = virtualinvoke r7.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.service$9: void onFinish()> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke $r5.<a2dp.Vol.service: void stopApp(java.lang.String)>($r6) in <a2dp.Vol.service$9: void onTick(long)> ==> <a2dp.Vol.service: void stopApp(java.lang.String)>
VIRTUAL edge: virtualinvoke r3.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service$9: void onTick(long)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r6 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.service$9: void onTick(long)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r8 = virtualinvoke $r7.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
VIRTUAL edge: $i1 = virtualinvoke $r8.<java.lang.String: int length()>() in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: int length()>
VIRTUAL edge: r5 = virtualinvoke $r7.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
STATIC edge: staticinvoke <a2dp.Vol.service: void access$100(a2dp.Vol.service)>($r9) in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void access$100(a2dp.Vol.service)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$200(a2dp.Vol.service)>($r9) in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$200(a2dp.Vol.service)>
STATIC edge: staticinvoke <a2dp.Vol.service: void access$300(a2dp.Vol.service,boolean,java.lang.String)>($r9, 0, null) in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void access$300(a2dp.Vol.service,boolean,java.lang.String)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$400()>() in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$400()>
STATIC edge: $r10 = staticinvoke <a2dp.Vol.service: java.lang.Integer access$500()>() in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: java.lang.Integer access$500()>
STATIC edge: $r11 = staticinvoke <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>() in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>
STATIC edge: staticinvoke <a2dp.Vol.service: void setVolume(int,android.content.Context)>($i0, $r11) in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void setVolume(int,android.content.Context)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$700()>() in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$700()>
STATIC edge: $r10 = staticinvoke <a2dp.Vol.service: java.lang.Integer access$800()>() in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: java.lang.Integer access$800()>
STATIC edge: staticinvoke <a2dp.Vol.service: int setPVolume(int)>($i0) in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: int setPVolume(int)>
STATIC edge: staticinvoke <a2dp.Vol.service: void access$900(a2dp.Vol.service,boolean)>($r9, $z0) in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void access$900(a2dp.Vol.service,boolean)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$1000(a2dp.Vol.service)>($r9) in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1000(a2dp.Vol.service)>
STATIC edge: staticinvoke <a2dp.Vol.service: void access$000(a2dp.Vol.service)>($r9) in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void access$000(a2dp.Vol.service)>
STATIC edge: $r13 = staticinvoke <a2dp.Vol.service: android.speech.tts.TextToSpeech access$1100(a2dp.Vol.service)>($r9) in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: android.speech.tts.TextToSpeech access$1100(a2dp.Vol.service)>
STATIC edge: $r14 = staticinvoke <a2dp.Vol.service: android.content.BroadcastReceiver access$1200(a2dp.Vol.service)>($r12) in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: android.content.BroadcastReceiver access$1200(a2dp.Vol.service)>
VIRTUAL edge: virtualinvoke r3.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service$3: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: void printStackTrace()>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.service: a2dp.Vol.DeviceDB access$1300(a2dp.Vol.service)>($r4) in <a2dp.Vol.service$4: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: a2dp.Vol.DeviceDB access$1300(a2dp.Vol.service)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>("3") in <a2dp.Vol.service$4: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r6.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.service$4: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
VIRTUAL edge: $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8) in <a2dp.Vol.service$4: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: staticinvoke <a2dp.Vol.service: boolean access$1402(a2dp.Vol.service,boolean)>($r4, 1) in <a2dp.Vol.service$4: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1402(a2dp.Vol.service,boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)>($r6) in <a2dp.Vol.service$4: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void DoDisconnected(a2dp.Vol.btDevice)>
VIRTUAL edge: virtualinvoke r3.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service$4: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: void printStackTrace()>
STATIC edge: staticinvoke <a2dp.Vol.service: boolean access$1502(a2dp.Vol.service,boolean)>($r4, 1) in <a2dp.Vol.service$4: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1502(a2dp.Vol.service,boolean)>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)>($r6) in <a2dp.Vol.service$4: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$1500(a2dp.Vol.service)>($r4) in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1500(a2dp.Vol.service)>
STATIC edge: staticinvoke <a2dp.Vol.service: boolean access$1502(a2dp.Vol.service,boolean)>($r4, 1) in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1502(a2dp.Vol.service,boolean)>
STATIC edge: $r9 = staticinvoke <a2dp.Vol.service: a2dp.Vol.DeviceDB access$1300(a2dp.Vol.service)>($r4) in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: a2dp.Vol.DeviceDB access$1300(a2dp.Vol.service)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>($r8) in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r10.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
STATIC edge: staticinvoke <a2dp.Vol.service: boolean access$1502(a2dp.Vol.service,boolean)>($r4, 0) in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1502(a2dp.Vol.service,boolean)>
VIRTUAL edge: virtualinvoke r3.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("android.app.action.ENTER_CAR_MODE") in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>("1") in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("android.app.action.ENTER_DESK_MODE") in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>("2") in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("android.intent.action.ACTION_POWER_CONNECTED") in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>("4") in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.DeviceDB: a2dp.Vol.btDevice getBTD(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke r12.<java.lang.Exception: java.lang.String toString()>() in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r4.<a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)>($r10) in <a2dp.Vol.service$5: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void DoConnected(a2dp.Vol.btDevice)>
STATIC edge: staticinvoke <a2dp.Vol.service: int setPVolume(int)>($i0) in <a2dp.Vol.service$6: void onFinish()> ==> <a2dp.Vol.service: int setPVolume(int)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.service: void TextReader(java.lang.String)>($r4) in <a2dp.Vol.service$1: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void TextReader(java.lang.String)>
STATIC edge: staticinvoke <a2dp.Vol.service: void access$000(a2dp.Vol.service)>($r3) in <a2dp.Vol.service$2: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void access$000(a2dp.Vol.service)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R$menu: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<a2dp.Vol.PackagesChooser$AppInfoCache: java.lang.String getAppName()>() in <a2dp.Vol.PackagesChooser$AlphaComparator: int compare(a2dp.Vol.PackagesChooser$AppInfoCache,a2dp.Vol.PackagesChooser$AppInfoCache)> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: java.lang.String getAppName()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<a2dp.Vol.PackagesChooser$AppInfoCache: java.lang.String getAppName()>() in <a2dp.Vol.PackagesChooser$AlphaComparator: int compare(a2dp.Vol.PackagesChooser$AppInfoCache,a2dp.Vol.PackagesChooser$AppInfoCache)> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: java.lang.String getAppName()>
VIRTUAL edge: $i0 = virtualinvoke r0.<a2dp.Vol.PackagesChooser$AlphaComparator: int compare(a2dp.Vol.PackagesChooser$AppInfoCache,a2dp.Vol.PackagesChooser$AppInfoCache)>($r3, $r4) in <a2dp.Vol.PackagesChooser$AlphaComparator: int compare(java.lang.Object,java.lang.Object)> ==> <a2dp.Vol.PackagesChooser$AlphaComparator: int compare(a2dp.Vol.PackagesChooser$AppInfoCache,a2dp.Vol.PackagesChooser$AppInfoCache)>
SPECIAL edge: specialinvoke $r0.<a2dp.Vol.main: void getConnects()>() in <a2dp.Vol.main: void access$900(a2dp.Vol.main)> ==> <a2dp.Vol.main: void getConnects()>
VIRTUAL edge: virtualinvoke $r21.<android.os.RemoteException: void printStackTrace()>() in <a2dp.Vol.main: int getBtDevices(int)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<a2dp.Vol.btDevice: java.lang.String toString()>() in <a2dp.Vol.main: void refreshList(int)> ==> <a2dp.Vol.btDevice: java.lang.String toString()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.main: void refreshList(int)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
VIRTUAL edge: $r7 = virtualinvoke $r4.<a2dp.Vol.btDevice: java.lang.String getMac()>() in <a2dp.Vol.main: void refreshList(int)> ==> <a2dp.Vol.btDevice: java.lang.String getMac()>
VIRTUAL edge: $r4 = virtualinvoke $r13.<java.io.FileNotFoundException: java.lang.String getMessage()>() in <a2dp.Vol.main: void Locationbtn()> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r4 = virtualinvoke $r14.<java.io.IOException: java.lang.String getMessage()>() in <a2dp.Vol.main: void Locationbtn()> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r11 = virtualinvoke $r10.<a2dp.Vol.btDevice: java.lang.String toString()>() in <a2dp.Vol.main: void onActivityResult(int,int,android.content.Intent)> ==> <a2dp.Vol.btDevice: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke $r46.<android.content.pm.PackageManager$NameNotFoundException: java.lang.String getMessage()>() in <a2dp.Vol.main: void onCreate(android.os.Bundle)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $z0 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r14) in <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>(2131165201, $r18) in <a2dp.Vol.main$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)>
VIRTUAL edge: $r9 = virtualinvoke r7.<a2dp.Vol.btDevice: java.lang.String toString()>() in <a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.btDevice: java.lang.String toString()>
VIRTUAL edge: virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131165187, $r12) in <a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main$5$1: void onClick(android.content.DialogInterface,int)>
VIRTUAL edge: virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>(2131165189, $r13) in <a2dp.Vol.main$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <a2dp.Vol.main$5$2: void onClick(android.content.DialogInterface,int)>
VIRTUAL edge: $r5 = virtualinvoke $r15.<java.io.FileNotFoundException: java.lang.String getMessage()>() in <a2dp.Vol.main$7: boolean onLongClick(android.view.View)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r5 = virtualinvoke $r16.<java.io.IOException: java.lang.String getMessage()>() in <a2dp.Vol.main$7: boolean onLongClick(android.view.View)> ==> <java.lang.Throwable: java.lang.String getMessage()>
STATIC edge: staticinvoke <a2dp.Vol.main: void access$900(a2dp.Vol.main)>($r2) in <a2dp.Vol.main$9: void onFinish()> ==> <a2dp.Vol.main: void access$900(a2dp.Vol.main)>
STATIC edge: $i0 = staticinvoke <a2dp.Vol.main: int access$100(a2dp.Vol.main)>($r4) in <a2dp.Vol.main$9: void onFinish()> ==> <a2dp.Vol.main: int access$100(a2dp.Vol.main)>
STATIC edge: staticinvoke <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>($r2, $i0) in <a2dp.Vol.main$9: void onFinish()> ==> <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>
VIRTUAL edge: $r6 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.main$9: void onFinish()> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r5 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.main$9: void onTick(long)> ==> <java.lang.Throwable: java.lang.String getMessage()>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$1000(a2dp.Vol.service)>($r4) in <a2dp.Vol.service$16: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1000(a2dp.Vol.service)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>() in <a2dp.Vol.service$16: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>
STATIC edge: staticinvoke <a2dp.Vol.service: android.speech.tts.TextToSpeech access$1102(a2dp.Vol.service,android.speech.tts.TextToSpeech)>($r4, $r5) in <a2dp.Vol.service$16: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: android.speech.tts.TextToSpeech access$1102(a2dp.Vol.service,android.speech.tts.TextToSpeech)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$2000(a2dp.Vol.service)>($r4) in <a2dp.Vol.service$16: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$2000(a2dp.Vol.service)>
SPECIAL edge: specialinvoke $r11.<a2dp.Vol.service$16$1: void <init>(a2dp.Vol.service$16,long,long)>(r0, 1000L, 6000L) in <a2dp.Vol.service$16: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service$16$1: void <init>(a2dp.Vol.service$16,long,long)>
STATIC edge: staticinvoke <a2dp.Vol.service: boolean access$1002(a2dp.Vol.service,boolean)>($r4, 1) in <a2dp.Vol.service$16: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: boolean access$1002(a2dp.Vol.service,boolean)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.NotificationCatcher: void LoadPrefs()>() in <a2dp.Vol.NotificationCatcher$1: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.NotificationCatcher: void LoadPrefs()>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$1600()>() in <a2dp.Vol.service$10: void onFinish()> ==> <a2dp.Vol.service: boolean access$1600()>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$1600()>() in <a2dp.Vol.service$10: void onTick(long)> ==> <a2dp.Vol.service: boolean access$1600()>
VIRTUAL edge: $z0 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4) in <a2dp.Vol.service$11: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: virtualinvoke $r13.<android.os.RemoteException: void printStackTrace()>() in <a2dp.Vol.service$11: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <java.lang.Throwable: void printStackTrace()>
STATIC edge: $r2 = staticinvoke <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>() in <a2dp.Vol.service$11: void onServiceDisconnected(android.content.ComponentName)> ==> <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>
STATIC edge: staticinvoke <a2dp.Vol.service: void doUnbind(android.content.Context)>($r2) in <a2dp.Vol.service$11: void onServiceDisconnected(android.content.ComponentName)> ==> <a2dp.Vol.service: void doUnbind(android.content.Context)>
STATIC edge: $r1 = staticinvoke <a2dp.Vol.service: android.speech.tts.TextToSpeech access$1100(a2dp.Vol.service)>($r2) in <a2dp.Vol.service$14: void onInit(int)> ==> <a2dp.Vol.service: android.speech.tts.TextToSpeech access$1100(a2dp.Vol.service)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1) in <a2dp.Vol.service$15: void onDone(java.lang.String)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: $i1 = staticinvoke <a2dp.Vol.service: int access$1900(a2dp.Vol.service)>($r3) in <a2dp.Vol.service$15: void onDone(java.lang.String)> ==> <a2dp.Vol.service: int access$1900(a2dp.Vol.service)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.service: boolean access$1000(a2dp.Vol.service)>($r3) in <a2dp.Vol.service$15: void onDone(java.lang.String)> ==> <a2dp.Vol.service: boolean access$1000(a2dp.Vol.service)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>() in <a2dp.Vol.service$15: void onDone(java.lang.String)> ==> <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("android.provider.Telephony.SMS_RECEIVED") in <a2dp.Vol.service$12: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: $r8 = staticinvoke <a2dp.Vol.service: android.telephony.TelephonyManager access$1700(a2dp.Vol.service)>($r7) in <a2dp.Vol.service$12: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: android.telephony.TelephonyManager access$1700(a2dp.Vol.service)>
STATIC edge: $r13 = staticinvoke <a2dp.Vol.service: java.lang.String access$1800(a2dp.Vol.service,java.lang.String)>($r7, $r13) in <a2dp.Vol.service$12: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: java.lang.String access$1800(a2dp.Vol.service,java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>() in <a2dp.Vol.service$12: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: virtualinvoke $r7.<a2dp.Vol.service: void TextReader(java.lang.String)>($r6) in <a2dp.Vol.service$12: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.service: void TextReader(java.lang.String)>
STATIC edge: $r3 = staticinvoke <a2dp.Vol.service: android.speech.tts.TextToSpeech access$1100(a2dp.Vol.service)>($r2) in <a2dp.Vol.service$13: void onFinish()> ==> <a2dp.Vol.service: android.speech.tts.TextToSpeech access$1100(a2dp.Vol.service)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>() in <a2dp.Vol.service$13: void onFinish()> ==> <a2dp.Vol.service: a2dp.Vol.MyApplication access$600()>
VIRTUAL edge: virtualinvoke r1.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.service$13: void onFinish()> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R$drawable: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>(r3, $r12) in <a2dp.Vol.EditDevice$6: boolean onLongClick(android.view.View)> ==> <a2dp.Vol.EditDevice$6$1: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R$array: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i2 = virtualinvoke $r12.<java.lang.String: int length()>() in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <java.lang.String: int length()>
VIRTUAL edge: virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>(r3, $r16) in <a2dp.Vol.EditDevice$8: void onClick(android.view.View)> ==> <a2dp.Vol.EditDevice$8$1: void onClick(android.content.DialogInterface,int)>
VIRTUAL edge: virtualinvoke $r13.<java.io.UnsupportedEncodingException: void printStackTrace()>() in <a2dp.Vol.ProviderList: android.content.Intent getSelectedIntent(java.lang.String)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $l3 = virtualinvoke $r24.<java.lang.Long: long longValue()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.Long: long longValue()>
VIRTUAL edge: $l4 = virtualinvoke $r19.<java.lang.Long: long longValue()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.Long: long longValue()>
VIRTUAL edge: i0 = virtualinvoke r28.<java.lang.String: int length()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: int length()>
VIRTUAL edge: z0 = virtualinvoke $r32.<java.lang.String: boolean isEmpty()>() in <a2dp.Vol.NotificationCatcher$Readit: java.lang.Long doInBackground(android.service.notification.StatusBarNotification[])> ==> <java.lang.String: boolean isEmpty()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R$string: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <a2dp.Vol.AppChooser: android.content.pm.PackageManager access$200(a2dp.Vol.AppChooser)>($r3) in <a2dp.Vol.AppChooser$AppInfoCache: android.graphics.drawable.Drawable getIcon()> ==> <a2dp.Vol.AppChooser: android.content.pm.PackageManager access$200(a2dp.Vol.AppChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.BuildConfig: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r7 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.DeviceDB$OpenHelper: java.util.List GetColumns(android.database.sqlite.SQLiteDatabase)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke r2.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.DeviceDB$OpenHelper: java.util.List GetColumns(android.database.sqlite.SQLiteDatabase)> ==> <java.lang.Throwable: void printStackTrace()>
STATIC edge: $r3 = staticinvoke <a2dp.Vol.DeviceDB: android.content.Context access$000()>() in <a2dp.Vol.DeviceDB$OpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <a2dp.Vol.DeviceDB: android.content.Context access$000()>
VIRTUAL edge: virtualinvoke r0.<a2dp.Vol.DeviceDB$OpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1) in <a2dp.Vol.DeviceDB$OpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <a2dp.Vol.DeviceDB$OpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
STATIC edge: $r5 = staticinvoke <a2dp.Vol.DeviceDB$OpenHelper: java.util.List GetColumns(android.database.sqlite.SQLiteDatabase)>($r1) in <a2dp.Vol.DeviceDB$OpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <a2dp.Vol.DeviceDB$OpenHelper: java.util.List GetColumns(android.database.sqlite.SQLiteDatabase)>
STATIC edge: $r6 = staticinvoke <a2dp.Vol.DeviceDB$OpenHelper: java.util.List GetColumns(android.database.sqlite.SQLiteDatabase)>($r1) in <a2dp.Vol.DeviceDB$OpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <a2dp.Vol.DeviceDB$OpenHelper: java.util.List GetColumns(android.database.sqlite.SQLiteDatabase)>
STATIC edge: $r7 = staticinvoke <a2dp.Vol.DeviceDB$OpenHelper: java.lang.String join(java.util.List)>($r5) in <a2dp.Vol.DeviceDB$OpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <a2dp.Vol.DeviceDB$OpenHelper: java.lang.String join(java.util.List)>
VIRTUAL edge: virtualinvoke $r9.<android.database.SQLException: void printStackTrace()>() in <a2dp.Vol.DeviceDB$OpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r18.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>() in <a2dp.Vol.main$4$1: void onClick(android.content.DialogInterface,int)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.FileNameCleaner: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <a2dp.Vol.StoreLoc: void access$200(a2dp.Vol.StoreLoc,boolean)>($r1, 1) in <a2dp.Vol.StoreLoc$1: void onFinish()> ==> <a2dp.Vol.StoreLoc: void access$200(a2dp.Vol.StoreLoc,boolean)>
STATIC edge: $z0 = staticinvoke <a2dp.Vol.StoreLoc: boolean access$000(a2dp.Vol.StoreLoc)>($r1) in <a2dp.Vol.StoreLoc$1: void onTick(long)> ==> <a2dp.Vol.StoreLoc: boolean access$000(a2dp.Vol.StoreLoc)>
STATIC edge: $r2 = staticinvoke <a2dp.Vol.StoreLoc: a2dp.Vol.MyApplication access$100(a2dp.Vol.StoreLoc)>($r1) in <a2dp.Vol.StoreLoc$1: void onTick(long)> ==> <a2dp.Vol.StoreLoc: a2dp.Vol.MyApplication access$100(a2dp.Vol.StoreLoc)>
VIRTUAL edge: $z0 = virtualinvoke r5.<a2dp.Vol.PackagesChooser$AppInfoCache: boolean isChecked()>() in <a2dp.Vol.PackagesChooser: void cleanup()> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: boolean isChecked()>
VIRTUAL edge: $r7 = virtualinvoke r5.<a2dp.Vol.PackagesChooser$AppInfoCache: java.lang.String getPackageName()>() in <a2dp.Vol.PackagesChooser: void cleanup()> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: java.lang.String getPackageName()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getAppName()>() in <a2dp.Vol.AppChooser$AlphaComparator: int compare(a2dp.Vol.AppChooser$AppInfoCache,a2dp.Vol.AppChooser$AppInfoCache)> ==> <a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getAppName()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getAppName()>() in <a2dp.Vol.AppChooser$AlphaComparator: int compare(a2dp.Vol.AppChooser$AppInfoCache,a2dp.Vol.AppChooser$AppInfoCache)> ==> <a2dp.Vol.AppChooser$AppInfoCache: java.lang.String getAppName()>
VIRTUAL edge: $i0 = virtualinvoke r0.<a2dp.Vol.AppChooser$AlphaComparator: int compare(a2dp.Vol.AppChooser$AppInfoCache,a2dp.Vol.AppChooser$AppInfoCache)>($r3, $r4) in <a2dp.Vol.AppChooser$AlphaComparator: int compare(java.lang.Object,java.lang.Object)> ==> <a2dp.Vol.AppChooser$AlphaComparator: int compare(a2dp.Vol.AppChooser$AppInfoCache,a2dp.Vol.AppChooser$AppInfoCache)>
VIRTUAL edge: $i0 = virtualinvoke $r6.<java.lang.String: int length()>() in <a2dp.Vol.DeviceDB: java.util.List selectAll()> ==> <java.lang.String: int length()>
VIRTUAL edge: $r7 = virtualinvoke $r13.<java.io.IOException: java.lang.String getMessage()>() in <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportLocationTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$4: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportLocationTask: java.lang.Object doInBackground(java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportLocationTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$4: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportLocationTask: void onPreExecute()>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportLocationTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$4: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportLocationTask: void onPostExecute(java.lang.Object)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") in <a2dp.Vol.NotificationCatcher: void LoadPrefs()> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.NotificationCatcher$Readit: android.os.AsyncTask execute(java.lang.Object[])>($r3) in <a2dp.Vol.NotificationCatcher: void onNotificationPosted(android.service.notification.StatusBarNotification)> ==> <a2dp.Vol.NotificationCatcher$Readit: java.lang.Object doInBackground(java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ImportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$3: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPreExecute()>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ImportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$3: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: java.lang.Object doInBackground(java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ImportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$3: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ImportDatabaseFileTask: void onPostExecute(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDataAsXmlTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$2: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.Object doInBackground(java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDataAsXmlTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$2: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPostExecute(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDataAsXmlTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$2: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDataAsXmlTask: void onPreExecute()>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$1: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPreExecute()>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$1: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Object doInBackground(java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r3.<a2dp.Vol.ManageData$ExportDatabaseFileTask: android.os.AsyncTask execute(java.lang.Object[])>($r4) in <a2dp.Vol.ManageData$1: void onClick(android.view.View)> ==> <a2dp.Vol.ManageData$ExportDatabaseFileTask: void onPostExecute(java.lang.Object)>
STATIC edge: $r4 = staticinvoke <a2dp.Vol.PackagesChooser: android.content.pm.PackageManager access$100(a2dp.Vol.PackagesChooser)>($r3) in <a2dp.Vol.PackagesChooser$AppInfoCache: android.graphics.drawable.Drawable getIcon()> ==> <a2dp.Vol.PackagesChooser: android.content.pm.PackageManager access$100(a2dp.Vol.PackagesChooser)>
STATIC edge: staticinvoke <a2dp.Vol.main: void access$900(a2dp.Vol.main)>($r4) in <a2dp.Vol.main$13: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.main: void access$900(a2dp.Vol.main)>
STATIC edge: $i0 = staticinvoke <a2dp.Vol.main: int access$100(a2dp.Vol.main)>($r6) in <a2dp.Vol.main$13: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.main: int access$100(a2dp.Vol.main)>
STATIC edge: staticinvoke <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>($r4, $i0) in <a2dp.Vol.main$13: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>
VIRTUAL edge: virtualinvoke r3.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main$13: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r8 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.main$13: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: java.lang.String getMessage()>
STATIC edge: staticinvoke <a2dp.Vol.main: java.lang.String access$702(a2dp.Vol.main,java.lang.String)>($r6, $r9) in <a2dp.Vol.main$12: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.main: java.lang.String access$702(a2dp.Vol.main,java.lang.String)>
STATIC edge: $r9 = staticinvoke <a2dp.Vol.main: java.lang.String access$700(a2dp.Vol.main)>($r6) in <a2dp.Vol.main$12: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.main: java.lang.String access$700(a2dp.Vol.main)>
STATIC edge: staticinvoke <a2dp.Vol.main: int access$300(a2dp.Vol.main,int)>($r6, 0) in <a2dp.Vol.main$12: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.main: int access$300(a2dp.Vol.main,int)>
STATIC edge: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <a2dp.Vol.main$12: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
VIRTUAL edge: z3 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("a2dp.Vol") in <a2dp.Vol.main$12: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <a2dp.Vol.main$12: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
VIRTUAL edge: virtualinvoke r4.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main$12: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r9 = virtualinvoke r4.<java.lang.Exception: java.lang.String getMessage()>() in <a2dp.Vol.main$12: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke r3.<java.lang.Exception: void printStackTrace()>() in <a2dp.Vol.main$12: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r6.<java.net.URISyntaxException: void printStackTrace()>() in <a2dp.Vol.EditDevice: void onActivityResult(int,int,android.content.Intent)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R$dimen: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r10 = virtualinvoke $r13.<java.io.IOException: java.lang.String getMessage()>() in <a2dp.Vol.ManageData$ExportDatabaseFileTask: java.lang.Boolean doInBackground(java.lang.String[])> ==> <java.lang.Throwable: java.lang.String getMessage()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R$attr: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <a2dp.Vol.main: void access$900(a2dp.Vol.main)>($r3) in <a2dp.Vol.main$11: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.main: void access$900(a2dp.Vol.main)>
STATIC edge: $i0 = staticinvoke <a2dp.Vol.main: int access$100(a2dp.Vol.main)>($r4) in <a2dp.Vol.main$11: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.main: int access$100(a2dp.Vol.main)>
STATIC edge: staticinvoke <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>($r3, $i0) in <a2dp.Vol.main$11: void onReceive(android.content.Context,android.content.Intent)> ==> <a2dp.Vol.main: void access$200(a2dp.Vol.main,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R$id: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("intent:") in <a2dp.Vol.CustomIntentMaker: boolean isShortcutIntent(java.lang.String)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: r5 = virtualinvoke $r14.<java.io.IOException: java.lang.String getMessage()>() in <a2dp.Vol.ManageData$ExportDataAsXmlTask: java.lang.String doInBackground(java.lang.String[])> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r10 = virtualinvoke r9.<a2dp.Vol.PackagesChooser$AppInfoCache: android.graphics.drawable.Drawable getIcon()>() in <a2dp.Vol.PackagesChooser$PackageListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: android.graphics.drawable.Drawable getIcon()>
VIRTUAL edge: $r11 = virtualinvoke r9.<a2dp.Vol.PackagesChooser$AppInfoCache: java.lang.String getAppName()>() in <a2dp.Vol.PackagesChooser$PackageListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: java.lang.String getAppName()>
VIRTUAL edge: $z0 = virtualinvoke r9.<a2dp.Vol.PackagesChooser$AppInfoCache: boolean isChecked()>() in <a2dp.Vol.PackagesChooser$PackageListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: boolean isChecked()>
SPECIAL edge: specialinvoke $r13.<a2dp.Vol.PackagesChooser$PackageListAdapter$1: void <init>(a2dp.Vol.PackagesChooser$PackageListAdapter,a2dp.Vol.PackagesChooser$AppInfoCache,android.widget.CheckBox)>(r0, r9, r12) in <a2dp.Vol.PackagesChooser$PackageListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <a2dp.Vol.PackagesChooser$PackageListAdapter$1: void <init>(a2dp.Vol.PackagesChooser$PackageListAdapter,a2dp.Vol.PackagesChooser$AppInfoCache,android.widget.CheckBox)>
VIRTUAL edge: virtualinvoke r12.<android.widget.CheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>($r13) in <a2dp.Vol.PackagesChooser$PackageListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <a2dp.Vol.PackagesChooser$PackageListAdapter$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.PackagesChooser$PackageListAdapter$1: void <init>(a2dp.Vol.PackagesChooser$PackageListAdapter,a2dp.Vol.PackagesChooser$AppInfoCache,android.widget.CheckBox)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<a2dp.Vol.PackagesChooser$AppInfoCache: void setChecked(boolean)>($z0) in <a2dp.Vol.PackagesChooser$PackageListAdapter$1: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <a2dp.Vol.PackagesChooser$AppInfoCache: void setChecked(boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a2dp.Vol.R$mipmap: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r11.<java.io.FileNotFoundException: void printStackTrace()>() in <a2dp.Vol.ALauncher: void onCreate()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r12.<java.io.IOException: void printStackTrace()>() in <a2dp.Vol.ALauncher: void onCreate()> ==> <java.lang.Throwable: void printStackTrace()>
